-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matprod is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_BUS1_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_BUS1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_BUS1_AWVALID : IN STD_LOGIC;
    s_axi_BUS1_AWREADY : OUT STD_LOGIC;
    s_axi_BUS1_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS1_ADDR_WIDTH-1 downto 0);
    s_axi_BUS1_WVALID : IN STD_LOGIC;
    s_axi_BUS1_WREADY : OUT STD_LOGIC;
    s_axi_BUS1_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_BUS1_DATA_WIDTH-1 downto 0);
    s_axi_BUS1_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_BUS1_DATA_WIDTH/8-1 downto 0);
    s_axi_BUS1_ARVALID : IN STD_LOGIC;
    s_axi_BUS1_ARREADY : OUT STD_LOGIC;
    s_axi_BUS1_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS1_ADDR_WIDTH-1 downto 0);
    s_axi_BUS1_RVALID : OUT STD_LOGIC;
    s_axi_BUS1_RREADY : IN STD_LOGIC;
    s_axi_BUS1_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_BUS1_DATA_WIDTH-1 downto 0);
    s_axi_BUS1_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_BUS1_BVALID : OUT STD_LOGIC;
    s_axi_BUS1_BREADY : IN STD_LOGIC;
    s_axi_BUS1_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of matprod is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matprod_matprod,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=0,HLS_SYN_FF=4960,HLS_SYN_LUT=4650,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal m1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m3 : STD_LOGIC_VECTOR (63 downto 0);
    signal N1 : STD_LOGIC_VECTOR (31 downto 0);
    signal N2 : STD_LOGIC_VECTOR (31 downto 0);
    signal N3 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal icmp_ln40_reg_383 : STD_LOGIC_VECTOR (0 downto 0);
    signal N3_read_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal N2_read_reg_293 : STD_LOGIC_VECTOR (31 downto 0);
    signal N1_read_reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal m3_read_reg_307 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_read_reg_312 : STD_LOGIC_VECTOR (63 downto 0);
    signal m1_read_reg_317 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln6_fu_194_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln6_reg_322 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln6_1_fu_198_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln6_1_reg_327 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_202_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln23_reg_332 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln23_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_reg_339 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_cast_reg_343 : STD_LOGIC_VECTOR (60 downto 0);
    signal grp_fu_230_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln24_reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln24_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln24_reg_361 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal p_cast1_reg_365 : STD_LOGIC_VECTOR (60 downto 0);
    signal grp_fu_258_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln40_reg_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln40_fu_262_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal p_cast3_reg_387 : STD_LOGIC_VECTOR (60 downto 0);
    signal m1_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal m1_buffer_ce0 : STD_LOGIC;
    signal m1_buffer_we0 : STD_LOGIC;
    signal m1_buffer_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal m2_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal m2_buffer_ce0 : STD_LOGIC;
    signal m2_buffer_we0 : STD_LOGIC;
    signal m2_buffer_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal m3_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal m3_buffer_ce0 : STD_LOGIC;
    signal m3_buffer_we0 : STD_LOGIC;
    signal m3_buffer_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_ap_start : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_ap_done : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_ap_idle : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_ap_ready : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m1_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matprod_Pipeline_1_fu_153_m1_buffer_ce0 : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m1_buffer_we0 : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_m1_buffer_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_ap_start : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_ap_done : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_ap_idle : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_ap_ready : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m2_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matprod_Pipeline_2_fu_162_m2_buffer_ce0 : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m2_buffer_we0 : STD_LOGIC;
    signal grp_matprod_Pipeline_2_fu_162_m2_buffer_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_done : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_idle : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_ready : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_ce0 : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_ce0 : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_ce0 : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_we0 : STD_LOGIC;
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_ap_start : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_ap_done : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_ap_idle : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_ap_ready : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_matprod_Pipeline_4_fu_185_m3_buffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_matprod_Pipeline_4_fu_185_m3_buffer_ce0 : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal grp_matprod_Pipeline_1_fu_153_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_NS_fsm_state12 : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_matprod_Pipeline_2_fu_162_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_NS_fsm_state23 : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start_reg : STD_LOGIC := '0';
    signal grp_matprod_Pipeline_4_fu_185_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state28 : STD_LOGIC;
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal p_cast_cast_fu_220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast1_cast_fu_248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast3_cast_fu_276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state34 : BOOLEAN;
    signal trunc_ln6_fu_194_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln6_1_fu_198_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_230_ce : STD_LOGIC;
    signal ap_block_state13_on_subcall_done : BOOLEAN;
    signal grp_fu_258_ce : STD_LOGIC;
    signal ap_block_state24_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component matprod_matprod_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_cast_cast : IN STD_LOGIC_VECTOR (60 downto 0);
        m1_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        m1_buffer_ce0 : OUT STD_LOGIC;
        m1_buffer_we0 : OUT STD_LOGIC;
        m1_buffer_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sext_ln23 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matprod_matprod_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_cast1_cast : IN STD_LOGIC_VECTOR (60 downto 0);
        m2_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        m2_buffer_ce0 : OUT STD_LOGIC;
        m2_buffer_we0 : OUT STD_LOGIC;
        m2_buffer_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        sext_ln24 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matprod_matprod_Pipeline_VITIS_LOOP_26_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        N1 : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln6_1 : IN STD_LOGIC_VECTOR (9 downto 0);
        m1_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        m1_buffer_ce0 : OUT STD_LOGIC;
        m1_buffer_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        trunc_ln6 : IN STD_LOGIC_VECTOR (9 downto 0);
        m2_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        m2_buffer_ce0 : OUT STD_LOGIC;
        m2_buffer_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        N2 : IN STD_LOGIC_VECTOR (31 downto 0);
        m3_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        m3_buffer_ce0 : OUT STD_LOGIC;
        m3_buffer_we0 : OUT STD_LOGIC;
        m3_buffer_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        N3 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matprod_matprod_Pipeline_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_cast3_cast : IN STD_LOGIC_VECTOR (60 downto 0);
        m3_buffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        m3_buffer_ce0 : OUT STD_LOGIC;
        m3_buffer_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sext_ln40 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matprod_mul_32s_32s_32_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component matprod_m1_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component matprod_BUS1_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        m1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        m2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        m3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        N1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        N2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        N3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component matprod_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    m1_buffer_U : component matprod_m1_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => m1_buffer_address0,
        ce0 => m1_buffer_ce0,
        we0 => m1_buffer_we0,
        d0 => grp_matprod_Pipeline_1_fu_153_m1_buffer_d0,
        q0 => m1_buffer_q0);

    m2_buffer_U : component matprod_m1_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => m2_buffer_address0,
        ce0 => m2_buffer_ce0,
        we0 => m2_buffer_we0,
        d0 => grp_matprod_Pipeline_2_fu_162_m2_buffer_d0,
        q0 => m2_buffer_q0);

    m3_buffer_U : component matprod_m1_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => m3_buffer_address0,
        ce0 => m3_buffer_ce0,
        we0 => m3_buffer_we0,
        d0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_d0,
        q0 => m3_buffer_q0);

    grp_matprod_Pipeline_1_fu_153 : component matprod_matprod_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_matprod_Pipeline_1_fu_153_ap_start,
        ap_done => grp_matprod_Pipeline_1_fu_153_ap_done,
        ap_idle => grp_matprod_Pipeline_1_fu_153_ap_idle,
        ap_ready => grp_matprod_Pipeline_1_fu_153_ap_ready,
        m_axi_gmem_AWVALID => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_matprod_Pipeline_1_fu_153_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        p_cast_cast => p_cast_reg_343,
        m1_buffer_address0 => grp_matprod_Pipeline_1_fu_153_m1_buffer_address0,
        m1_buffer_ce0 => grp_matprod_Pipeline_1_fu_153_m1_buffer_ce0,
        m1_buffer_we0 => grp_matprod_Pipeline_1_fu_153_m1_buffer_we0,
        m1_buffer_d0 => grp_matprod_Pipeline_1_fu_153_m1_buffer_d0,
        sext_ln23 => mul_ln23_reg_332);

    grp_matprod_Pipeline_2_fu_162 : component matprod_matprod_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_matprod_Pipeline_2_fu_162_ap_start,
        ap_done => grp_matprod_Pipeline_2_fu_162_ap_done,
        ap_idle => grp_matprod_Pipeline_2_fu_162_ap_idle,
        ap_ready => grp_matprod_Pipeline_2_fu_162_ap_ready,
        m_axi_gmem_AWVALID => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_matprod_Pipeline_2_fu_162_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        p_cast1_cast => p_cast1_reg_365,
        m2_buffer_address0 => grp_matprod_Pipeline_2_fu_162_m2_buffer_address0,
        m2_buffer_ce0 => grp_matprod_Pipeline_2_fu_162_m2_buffer_ce0,
        m2_buffer_we0 => grp_matprod_Pipeline_2_fu_162_m2_buffer_we0,
        m2_buffer_d0 => grp_matprod_Pipeline_2_fu_162_m2_buffer_d0,
        sext_ln24 => mul_ln24_reg_354);

    grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171 : component matprod_matprod_Pipeline_VITIS_LOOP_26_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start,
        ap_done => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_done,
        ap_idle => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_idle,
        ap_ready => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_ready,
        N1 => N1_read_reg_300,
        trunc_ln6_1 => trunc_ln6_1_reg_327,
        m1_buffer_address0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_address0,
        m1_buffer_ce0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_ce0,
        m1_buffer_q0 => m1_buffer_q0,
        trunc_ln6 => trunc_ln6_reg_322,
        m2_buffer_address0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_address0,
        m2_buffer_ce0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_ce0,
        m2_buffer_q0 => m2_buffer_q0,
        N2 => N2_read_reg_293,
        m3_buffer_address0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_address0,
        m3_buffer_ce0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_ce0,
        m3_buffer_we0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_we0,
        m3_buffer_d0 => grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_d0,
        N3 => N3_read_reg_286);

    grp_matprod_Pipeline_4_fu_185 : component matprod_matprod_Pipeline_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_matprod_Pipeline_4_fu_185_ap_start,
        ap_done => grp_matprod_Pipeline_4_fu_185_ap_done,
        ap_idle => grp_matprod_Pipeline_4_fu_185_ap_idle,
        ap_ready => grp_matprod_Pipeline_4_fu_185_ap_ready,
        m_axi_gmem_AWVALID => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv64_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        p_cast3_cast => p_cast3_reg_387,
        m3_buffer_address0 => grp_matprod_Pipeline_4_fu_185_m3_buffer_address0,
        m3_buffer_ce0 => grp_matprod_Pipeline_4_fu_185_m3_buffer_ce0,
        m3_buffer_q0 => m3_buffer_q0,
        sext_ln40 => mul_ln40_reg_376);

    BUS1_s_axi_U : component matprod_BUS1_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_BUS1_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_BUS1_DATA_WIDTH)
    port map (
        AWVALID => s_axi_BUS1_AWVALID,
        AWREADY => s_axi_BUS1_AWREADY,
        AWADDR => s_axi_BUS1_AWADDR,
        WVALID => s_axi_BUS1_WVALID,
        WREADY => s_axi_BUS1_WREADY,
        WDATA => s_axi_BUS1_WDATA,
        WSTRB => s_axi_BUS1_WSTRB,
        ARVALID => s_axi_BUS1_ARVALID,
        ARREADY => s_axi_BUS1_ARREADY,
        ARADDR => s_axi_BUS1_ARADDR,
        RVALID => s_axi_BUS1_RVALID,
        RREADY => s_axi_BUS1_RREADY,
        RDATA => s_axi_BUS1_RDATA,
        RRESP => s_axi_BUS1_RRESP,
        BVALID => s_axi_BUS1_BVALID,
        BREADY => s_axi_BUS1_BREADY,
        BRESP => s_axi_BUS1_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        m1 => m1,
        m2 => m2,
        m3 => m3,
        N1 => N1,
        N2 => N2,
        N3 => N3,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component matprod_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 64,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARLEN => gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWLEN => gmem_AWLEN,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WDATA,
        I_WSTRB => grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);

    mul_32s_32s_32_2_1_U30 : component matprod_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => N2_read_reg_293,
        din1 => N1_read_reg_300,
        ce => ap_const_logic_1,
        dout => grp_fu_202_p2);

    mul_32s_32s_32_2_1_U31 : component matprod_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => N3_read_reg_286,
        din1 => N2_read_reg_293,
        ce => grp_fu_230_ce,
        dout => grp_fu_230_p2);

    mul_32s_32s_32_2_1_U32 : component matprod_mul_32s_32s_32_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => N3_read_reg_286,
        din1 => N1_read_reg_300,
        ce => grp_fu_258_ce,
        dout => grp_fu_258_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_matprod_Pipeline_1_fu_153_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_matprod_Pipeline_1_fu_153_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state12) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_matprod_Pipeline_1_fu_153_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_matprod_Pipeline_1_fu_153_ap_ready = ap_const_logic_1)) then 
                    grp_matprod_Pipeline_1_fu_153_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_matprod_Pipeline_2_fu_162_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_matprod_Pipeline_2_fu_162_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state23) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                    grp_matprod_Pipeline_2_fu_162_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_matprod_Pipeline_2_fu_162_ap_ready = ap_const_logic_1)) then 
                    grp_matprod_Pipeline_2_fu_162_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_matprod_Pipeline_4_fu_185_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_matprod_Pipeline_4_fu_185_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state28) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                    grp_matprod_Pipeline_4_fu_185_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_matprod_Pipeline_4_fu_185_ap_ready = ap_const_logic_1)) then 
                    grp_matprod_Pipeline_4_fu_185_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                    grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_ready = ap_const_logic_1)) then 
                    grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                N1_read_reg_300 <= N1;
                N2_read_reg_293 <= N2;
                N3_read_reg_286 <= N3;
                m1_read_reg_317 <= m1;
                m2_read_reg_312 <= m2;
                m3_read_reg_307 <= m3;
                trunc_ln6_1_reg_327 <= trunc_ln6_1_fu_198_p1;
                trunc_ln6_reg_322 <= trunc_ln6_fu_194_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln23_reg_339 <= icmp_ln23_fu_206_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                icmp_ln24_reg_361 <= icmp_ln24_fu_234_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                icmp_ln40_reg_383 <= icmp_ln40_fu_262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_ln23_reg_332 <= grp_fu_202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                mul_ln24_reg_354 <= grp_fu_230_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                mul_ln40_reg_376 <= grp_fu_258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln24_fu_234_p2 = ap_const_lv1_0))) then
                p_cast1_reg_365 <= m2_read_reg_312(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                p_cast3_reg_387 <= m3_read_reg_307(63 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln23_fu_206_p2 = ap_const_lv1_0))) then
                p_cast_reg_343 <= m1_read_reg_317(63 downto 3);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, ap_CS_fsm_state16, ap_CS_fsm_state27, ap_CS_fsm_state34, icmp_ln40_reg_383, icmp_ln23_fu_206_p2, ap_CS_fsm_state4, icmp_ln24_fu_234_p2, ap_CS_fsm_state15, icmp_ln40_fu_262_p2, ap_CS_fsm_state26, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_done, grp_matprod_Pipeline_4_fu_185_ap_done, gmem_AWREADY, gmem_ARREADY, gmem_BVALID, ap_CS_fsm_state13, ap_CS_fsm_state24, ap_CS_fsm_state29, ap_block_state13_on_subcall_done, ap_block_state24_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln23_fu_206_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln24_fu_234_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_done = ap_const_logic_1) and (icmp_ln40_fu_262_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                elsif (((grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_done = ap_const_logic_1) and (icmp_ln40_fu_262_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_matprod_Pipeline_4_fu_185_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln40_reg_383 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_NS_fsm_state12 <= ap_NS_fsm(11);
    ap_NS_fsm_state23 <= ap_NS_fsm(22);
    ap_NS_fsm_state28 <= ap_NS_fsm(27);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(ap_block_state13_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state13_on_subcall_done)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(ap_block_state24_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state24_on_subcall_done)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_done)
    begin
        if ((grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state27_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_matprod_Pipeline_4_fu_185_ap_done)
    begin
        if ((grp_matprod_Pipeline_4_fu_185_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;

    ap_ST_fsm_state34_blk_assign_proc : process(icmp_ln40_reg_383, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_0) and (icmp_ln40_reg_383 = ap_const_lv1_0))) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state13_on_subcall_done_assign_proc : process(icmp_ln23_reg_339, grp_matprod_Pipeline_1_fu_153_ap_done)
    begin
                ap_block_state13_on_subcall_done <= ((grp_matprod_Pipeline_1_fu_153_ap_done = ap_const_logic_0) and (icmp_ln23_reg_339 = ap_const_lv1_0));
    end process;


    ap_block_state24_on_subcall_done_assign_proc : process(icmp_ln24_reg_361, grp_matprod_Pipeline_2_fu_162_ap_done)
    begin
                ap_block_state24_on_subcall_done <= ((grp_matprod_Pipeline_2_fu_162_ap_done = ap_const_logic_0) and (icmp_ln24_reg_361 = ap_const_lv1_0));
    end process;


    ap_block_state34_assign_proc : process(icmp_ln40_reg_383, gmem_BVALID)
    begin
                ap_block_state34 <= ((gmem_BVALID = ap_const_logic_0) and (icmp_ln40_reg_383 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state34, icmp_ln40_reg_383, gmem_BVALID)
    begin
        if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln40_reg_383 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state34, icmp_ln40_reg_383, gmem_BVALID)
    begin
        if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln40_reg_383 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state16, icmp_ln23_reg_339, icmp_ln24_reg_361, grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARADDR, grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARADDR, gmem_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24, p_cast_cast_fu_220_p1, p_cast1_cast_fu_248_p1)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem_ARADDR <= p_cast1_cast_fu_248_p1;
        elsif (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_ARADDR <= p_cast_cast_fu_220_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln24_reg_361 = ap_const_lv1_0)))) then 
            gmem_ARADDR <= grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln23_reg_339 = ap_const_lv1_0)))) then 
            gmem_ARADDR <= grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARADDR;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state16, mul_ln23_reg_332, icmp_ln23_reg_339, mul_ln24_reg_354, icmp_ln24_reg_361, grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARLEN, grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARLEN, gmem_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            gmem_ARLEN <= mul_ln24_reg_354;
        elsif (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_ARLEN <= mul_ln23_reg_332;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln24_reg_361 = ap_const_lv1_0)))) then 
            gmem_ARLEN <= grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln23_reg_339 = ap_const_lv1_0)))) then 
            gmem_ARLEN <= grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARLEN;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state16, icmp_ln23_reg_339, icmp_ln24_reg_361, grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARVALID, grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARVALID, gmem_ARREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if ((((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln24_reg_361 = ap_const_lv1_0)))) then 
            gmem_ARVALID <= grp_matprod_Pipeline_2_fu_162_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln23_reg_339 = ap_const_lv1_0)))) then 
            gmem_ARVALID <= grp_matprod_Pipeline_1_fu_153_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWADDR_assign_proc : process(ap_CS_fsm_state27, grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWADDR, gmem_AWREADY, ap_CS_fsm_state28, ap_CS_fsm_state29, p_cast3_cast_fu_276_p1)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_AWADDR <= p_cast3_cast_fu_276_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_AWADDR <= grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWADDR;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWLEN_assign_proc : process(ap_CS_fsm_state27, mul_ln40_reg_376, grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWLEN, gmem_AWREADY, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_AWLEN <= mul_ln40_reg_376;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_AWLEN <= grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWLEN;
        else 
            gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_state27, grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWVALID, gmem_AWREADY, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_AWVALID <= grp_matprod_Pipeline_4_fu_185_m_axi_gmem_AWVALID;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_state34, icmp_ln40_reg_383, grp_matprod_Pipeline_4_fu_185_m_axi_gmem_BREADY, gmem_BVALID, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if ((not(((gmem_BVALID = ap_const_logic_0) and (icmp_ln40_reg_383 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln40_reg_383 = ap_const_lv1_0))) then 
            gmem_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_BREADY <= grp_matprod_Pipeline_4_fu_185_m_axi_gmem_BREADY;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(icmp_ln23_reg_339, icmp_ln24_reg_361, grp_matprod_Pipeline_1_fu_153_m_axi_gmem_RREADY, grp_matprod_Pipeline_2_fu_162_m_axi_gmem_RREADY, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state23, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln24_reg_361 = ap_const_lv1_0)))) then 
            gmem_RREADY <= grp_matprod_Pipeline_2_fu_162_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln23_reg_339 = ap_const_lv1_0)))) then 
            gmem_RREADY <= grp_matprod_Pipeline_1_fu_153_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WVALID, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_WVALID <= grp_matprod_Pipeline_4_fu_185_m_axi_gmem_WVALID;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state5, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state34, icmp_ln40_reg_383)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) and (icmp_ln40_reg_383 = ap_const_lv1_0))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_230_ce_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state13, ap_block_state13_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_boolean_0 = ap_block_state13_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            grp_fu_230_ce <= ap_const_logic_1;
        else 
            grp_fu_230_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_258_ce_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state24, ap_block_state24_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_state24_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            grp_fu_258_ce <= ap_const_logic_1;
        else 
            grp_fu_258_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_matprod_Pipeline_1_fu_153_ap_start <= grp_matprod_Pipeline_1_fu_153_ap_start_reg;
    grp_matprod_Pipeline_2_fu_162_ap_start <= grp_matprod_Pipeline_2_fu_162_ap_start_reg;
    grp_matprod_Pipeline_4_fu_185_ap_start <= grp_matprod_Pipeline_4_fu_185_ap_start_reg;
    grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_ap_start_reg;
    icmp_ln23_fu_206_p2 <= "1" when (mul_ln23_reg_332 = ap_const_lv32_0) else "0";
    icmp_ln24_fu_234_p2 <= "1" when (mul_ln24_reg_354 = ap_const_lv32_0) else "0";
    icmp_ln40_fu_262_p2 <= "1" when (mul_ln40_reg_376 = ap_const_lv32_0) else "0";

    m1_buffer_address0_assign_proc : process(icmp_ln23_reg_339, ap_CS_fsm_state26, grp_matprod_Pipeline_1_fu_153_m1_buffer_address0, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_address0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            m1_buffer_address0 <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln23_reg_339 = ap_const_lv1_0))) then 
            m1_buffer_address0 <= grp_matprod_Pipeline_1_fu_153_m1_buffer_address0;
        else 
            m1_buffer_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    m1_buffer_ce0_assign_proc : process(icmp_ln23_reg_339, ap_CS_fsm_state26, grp_matprod_Pipeline_1_fu_153_m1_buffer_ce0, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            m1_buffer_ce0 <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m1_buffer_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln23_reg_339 = ap_const_lv1_0))) then 
            m1_buffer_ce0 <= grp_matprod_Pipeline_1_fu_153_m1_buffer_ce0;
        else 
            m1_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m1_buffer_we0_assign_proc : process(icmp_ln23_reg_339, grp_matprod_Pipeline_1_fu_153_m1_buffer_we0, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln23_reg_339 = ap_const_lv1_0))) then 
            m1_buffer_we0 <= grp_matprod_Pipeline_1_fu_153_m1_buffer_we0;
        else 
            m1_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    m2_buffer_address0_assign_proc : process(icmp_ln24_reg_361, ap_CS_fsm_state26, grp_matprod_Pipeline_2_fu_162_m2_buffer_address0, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_address0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            m2_buffer_address0 <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln24_reg_361 = ap_const_lv1_0))) then 
            m2_buffer_address0 <= grp_matprod_Pipeline_2_fu_162_m2_buffer_address0;
        else 
            m2_buffer_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    m2_buffer_ce0_assign_proc : process(icmp_ln24_reg_361, ap_CS_fsm_state26, grp_matprod_Pipeline_2_fu_162_m2_buffer_ce0, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_ce0, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            m2_buffer_ce0 <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m2_buffer_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln24_reg_361 = ap_const_lv1_0))) then 
            m2_buffer_ce0 <= grp_matprod_Pipeline_2_fu_162_m2_buffer_ce0;
        else 
            m2_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m2_buffer_we0_assign_proc : process(icmp_ln24_reg_361, grp_matprod_Pipeline_2_fu_162_m2_buffer_we0, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln24_reg_361 = ap_const_lv1_0))) then 
            m2_buffer_we0 <= grp_matprod_Pipeline_2_fu_162_m2_buffer_we0;
        else 
            m2_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    m3_buffer_address0_assign_proc : process(ap_CS_fsm_state26, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_address0, grp_matprod_Pipeline_4_fu_185_m3_buffer_address0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            m3_buffer_address0 <= grp_matprod_Pipeline_4_fu_185_m3_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            m3_buffer_address0 <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_address0;
        else 
            m3_buffer_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    m3_buffer_ce0_assign_proc : process(ap_CS_fsm_state26, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_ce0, grp_matprod_Pipeline_4_fu_185_m3_buffer_ce0, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            m3_buffer_ce0 <= grp_matprod_Pipeline_4_fu_185_m3_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            m3_buffer_ce0 <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_ce0;
        else 
            m3_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    m3_buffer_we0_assign_proc : process(ap_CS_fsm_state26, grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            m3_buffer_we0 <= grp_matprod_Pipeline_VITIS_LOOP_26_1_fu_171_m3_buffer_we0;
        else 
            m3_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

        p_cast1_cast_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast1_reg_365),64));

        p_cast3_cast_fu_276_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast3_reg_387),64));

        p_cast_cast_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_reg_343),64));

    trunc_ln6_1_fu_198_p0 <= N2;
    trunc_ln6_1_fu_198_p1 <= trunc_ln6_1_fu_198_p0(10 - 1 downto 0);
    trunc_ln6_fu_194_p0 <= N3;
    trunc_ln6_fu_194_p1 <= trunc_ln6_fu_194_p0(10 - 1 downto 0);
end behav;
