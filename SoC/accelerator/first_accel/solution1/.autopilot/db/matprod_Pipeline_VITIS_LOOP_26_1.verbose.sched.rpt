

================================================================
== Vitis HLS Report for 'matprod_Pipeline_VITIS_LOOP_26_1'
================================================================
* Date:           Wed Jan 10 14:55:04 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        first_accel
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a100t-csg324-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  20.00 ns|  14.422 ns|     5.40 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_26_1  |        ?|        ?|        12|          3|          1|     ?|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 13


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 3, D = 13, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.61>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 15 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 16 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 17 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%N3_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %N3"   --->   Operation 18 'read' 'N3_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%N2_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %N2"   --->   Operation 19 'read' 'N2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln6_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %trunc_ln6"   --->   Operation 20 'read' 'trunc_ln6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%trunc_ln6_1_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %trunc_ln6_1"   --->   Operation 21 'read' 'trunc_ln6_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%N1_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %N1"   --->   Operation 22 'read' 'N1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.61ns)   --->   "%store_ln0 = store i32 0, i32 %i"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 24 [1/1] (1.61ns)   --->   "%store_ln0 = store i32 0, i32 %j"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 25 [1/1] (1.61ns)   --->   "%store_ln0 = store i32 0, i32 %k"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.cond"   --->   Operation 26 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.72>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%i_2 = load i32 %i"   --->   Operation 27 'load' 'i_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 28 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (2.43ns)   --->   "%icmp_ln26 = icmp_slt  i32 %i_2, i32 %N1_read" [first_accel/matprod.cpp:26]   --->   Operation 29 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln26 = br i1 %icmp_ln26, void %for.end.exitStub, void %for.body_ifconv" [first_accel/matprod.cpp:26]   --->   Operation 30 'br' 'br_ln26' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%k_load = load i32 %k"   --->   Operation 31 'load' 'k_load' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%j_load = load i32 %j"   --->   Operation 32 'load' 'j_load' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%empty = trunc i32 %j_load"   --->   Operation 33 'trunc' 'empty' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%empty_20 = trunc i32 %k_load"   --->   Operation 34 'trunc' 'empty_20' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%empty_21 = trunc i32 %i_2"   --->   Operation 35 'trunc' 'empty_21' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 36 [3/3] (1.45ns) (grouped into DSP with root node add_ln27)   --->   "%mul_ln27 = mul i10 %empty_21, i10 %trunc_ln6_1_read" [first_accel/matprod.cpp:27]   --->   Operation 36 'mul' 'mul_ln27' <Predicate = (icmp_ln26)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 37 [1/1] (2.43ns)   --->   "%icmp_ln28 = icmp_eq  i32 %k_load, i32 0" [first_accel/matprod.cpp:28]   --->   Operation 37 'icmp' 'icmp_ln28' <Predicate = (icmp_ln26)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (2.70ns)   --->   "%k_1 = add i32 %k_load, i32 1" [first_accel/matprod.cpp:30]   --->   Operation 38 'add' 'k_1' <Predicate = (icmp_ln26)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (2.43ns)   --->   "%icmp_ln31 = icmp_eq  i32 %k_1, i32 %N2_read" [first_accel/matprod.cpp:31]   --->   Operation 39 'icmp' 'icmp_ln31' <Predicate = (icmp_ln26)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln31 = br i1 %icmp_ln31, void %for.body_ifconv.if.end26_crit_edge, void %if.then16" [first_accel/matprod.cpp:31]   --->   Operation 40 'br' 'br_ln31' <Predicate = (icmp_ln26)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.61ns)   --->   "%store_ln31 = store i32 %k_1, i32 %k" [first_accel/matprod.cpp:31]   --->   Operation 41 'store' 'store_ln31' <Predicate = (icmp_ln26 & !icmp_ln31)> <Delay = 1.61>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln31 = br void %if.end26" [first_accel/matprod.cpp:31]   --->   Operation 42 'br' 'br_ln31' <Predicate = (icmp_ln26 & !icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (2.70ns)   --->   "%j_1 = add i32 %j_load, i32 1" [first_accel/matprod.cpp:34]   --->   Operation 43 'add' 'j_1' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (2.43ns)   --->   "%icmp_ln35 = icmp_eq  i32 %j_1, i32 %N3_read" [first_accel/matprod.cpp:35]   --->   Operation 44 'icmp' 'icmp_ln35' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 2.43> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (2.70ns)   --->   "%add_ln35 = add i32 %i_2, i32 1" [first_accel/matprod.cpp:35]   --->   Operation 45 'add' 'add_ln35' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 2.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.79ns)   --->   "%i_3 = select i1 %icmp_ln35, i32 %add_ln35, i32 %i_2" [first_accel/matprod.cpp:35]   --->   Operation 46 'select' 'i_3' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.79ns)   --->   "%j_2 = select i1 %icmp_ln35, i32 0, i32 %j_1" [first_accel/matprod.cpp:35]   --->   Operation 47 'select' 'j_2' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (1.61ns)   --->   "%store_ln36 = store i32 %i_3, i32 %i" [first_accel/matprod.cpp:36]   --->   Operation 48 'store' 'store_ln36' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 1.61>
ST_2 : Operation 49 [1/1] (1.61ns)   --->   "%store_ln36 = store i32 %j_2, i32 %j" [first_accel/matprod.cpp:36]   --->   Operation 49 'store' 'store_ln36' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 1.61>
ST_2 : Operation 50 [1/1] (1.61ns)   --->   "%store_ln36 = store i32 0, i32 %k" [first_accel/matprod.cpp:36]   --->   Operation 50 'store' 'store_ln36' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 1.61>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln26 = br void %for.cond" [first_accel/matprod.cpp:26]   --->   Operation 51 'br' 'br_ln26' <Predicate = (icmp_ln26)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.45>
ST_3 : Operation 52 [2/3] (1.45ns) (grouped into DSP with root node add_ln27)   --->   "%mul_ln27 = mul i10 %empty_21, i10 %trunc_ln6_1_read" [first_accel/matprod.cpp:27]   --->   Operation 52 'mul' 'mul_ln27' <Predicate = (icmp_ln26)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 53 [3/3] (1.45ns) (grouped into DSP with root node add_ln27_1)   --->   "%mul_ln27_1 = mul i10 %empty_20, i10 %trunc_ln6_read" [first_accel/matprod.cpp:27]   --->   Operation 53 'mul' 'mul_ln27_1' <Predicate = (icmp_ln26)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 2.10>
ST_4 : Operation 54 [1/3] (0.00ns) (grouped into DSP with root node add_ln27)   --->   "%mul_ln27 = mul i10 %empty_21, i10 %trunc_ln6_1_read" [first_accel/matprod.cpp:27]   --->   Operation 54 'mul' 'mul_ln27' <Predicate = (icmp_ln26)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 55 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln27 = add i10 %empty_20, i10 %mul_ln27" [first_accel/matprod.cpp:27]   --->   Operation 55 'add' 'add_ln27' <Predicate = (icmp_ln26)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 56 [2/3] (1.45ns) (grouped into DSP with root node add_ln27_1)   --->   "%mul_ln27_1 = mul i10 %empty_20, i10 %trunc_ln6_read" [first_accel/matprod.cpp:27]   --->   Operation 56 'mul' 'mul_ln27_1' <Predicate = (icmp_ln26)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 57 [3/3] (1.45ns) (grouped into DSP with root node add_ln33)   --->   "%mul_ln33 = mul i10 %empty_21, i10 %trunc_ln6_read" [first_accel/matprod.cpp:33]   --->   Operation 57 'mul' 'mul_ln33' <Predicate = (icmp_ln26 & icmp_ln31)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 5.35>
ST_5 : Operation 58 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln27 = add i10 %empty_20, i10 %mul_ln27" [first_accel/matprod.cpp:27]   --->   Operation 58 'add' 'add_ln27' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln27 = zext i10 %add_ln27" [first_accel/matprod.cpp:27]   --->   Operation 59 'zext' 'zext_ln27' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%m1_buffer_addr = getelementptr i32 %m1_buffer, i64 0, i64 %zext_ln27" [first_accel/matprod.cpp:27]   --->   Operation 60 'getelementptr' 'm1_buffer_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [2/2] (3.25ns)   --->   "%m1_buffer_load = load i10 %m1_buffer_addr" [first_accel/matprod.cpp:27]   --->   Operation 61 'load' 'm1_buffer_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_5 : Operation 62 [1/3] (0.00ns) (grouped into DSP with root node add_ln27_1)   --->   "%mul_ln27_1 = mul i10 %empty_20, i10 %trunc_ln6_read" [first_accel/matprod.cpp:27]   --->   Operation 62 'mul' 'mul_ln27_1' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 63 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln27_1 = add i10 %mul_ln27_1, i10 %empty" [first_accel/matprod.cpp:27]   --->   Operation 63 'add' 'add_ln27_1' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 64 [2/3] (1.45ns) (grouped into DSP with root node add_ln33)   --->   "%mul_ln33 = mul i10 %empty_21, i10 %trunc_ln6_read" [first_accel/matprod.cpp:33]   --->   Operation 64 'mul' 'mul_ln33' <Predicate = (icmp_ln31)> <Delay = 1.45> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 5.35>
ST_6 : Operation 65 [1/2] (3.25ns)   --->   "%m1_buffer_load = load i10 %m1_buffer_addr" [first_accel/matprod.cpp:27]   --->   Operation 65 'load' 'm1_buffer_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_6 : Operation 66 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln27_1 = add i10 %mul_ln27_1, i10 %empty" [first_accel/matprod.cpp:27]   --->   Operation 66 'add' 'add_ln27_1' <Predicate = true> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln27_1 = zext i10 %add_ln27_1" [first_accel/matprod.cpp:27]   --->   Operation 67 'zext' 'zext_ln27_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%m2_buffer_addr = getelementptr i32 %m2_buffer, i64 0, i64 %zext_ln27_1" [first_accel/matprod.cpp:27]   --->   Operation 68 'getelementptr' 'm2_buffer_addr' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 69 [2/2] (3.25ns)   --->   "%m2_buffer_load = load i10 %m2_buffer_addr" [first_accel/matprod.cpp:27]   --->   Operation 69 'load' 'm2_buffer_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_6 : Operation 70 [1/3] (0.00ns) (grouped into DSP with root node add_ln33)   --->   "%mul_ln33 = mul i10 %empty_21, i10 %trunc_ln6_read" [first_accel/matprod.cpp:33]   --->   Operation 70 'mul' 'mul_ln33' <Predicate = (icmp_ln31)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 71 [2/2] (2.10ns) (root node of the DSP)   --->   "%add_ln33 = add i10 %mul_ln33, i10 %empty" [first_accel/matprod.cpp:33]   --->   Operation 71 'add' 'add_ln33' <Predicate = (icmp_ln31)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 3.25>
ST_7 : Operation 72 [1/2] (3.25ns)   --->   "%m2_buffer_load = load i10 %m2_buffer_addr" [first_accel/matprod.cpp:27]   --->   Operation 72 'load' 'm2_buffer_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_7 : Operation 73 [1/2] (2.10ns) (root node of the DSP)   --->   "%add_ln33 = add i10 %mul_ln33, i10 %empty" [first_accel/matprod.cpp:33]   --->   Operation 73 'add' 'add_ln33' <Predicate = (icmp_ln31)> <Delay = 2.10> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 12.5>
ST_8 : Operation 74 [2/2] (12.5ns)   --->   "%mul = fmul i32 %m1_buffer_load, i32 %m2_buffer_load" [first_accel/matprod.cpp:27]   --->   Operation 74 'fmul' 'mul' <Predicate = true> <Delay = 12.5> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 1> <II = 1> <Delay = 12.5> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 12.5>
ST_9 : Operation 75 [1/2] (12.5ns)   --->   "%mul = fmul i32 %m1_buffer_load, i32 %m2_buffer_load" [first_accel/matprod.cpp:27]   --->   Operation 75 'fmul' 'mul' <Predicate = true> <Delay = 12.5> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 1> <II = 1> <Delay = 12.5> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 10.3>
ST_10 : Operation 76 [1/1] (0.00ns)   --->   "%regc_load = load i32 %regc" [first_accel/matprod.cpp:29]   --->   Operation 76 'load' 'regc_load' <Predicate = (!icmp_ln28)> <Delay = 0.00>
ST_10 : Operation 77 [4/4] (10.3ns)   --->   "%add = fadd i32 %regc_load, i32 %mul" [first_accel/matprod.cpp:29]   --->   Operation 77 'fadd' 'add' <Predicate = (!icmp_ln28)> <Delay = 10.3> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.3> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 88 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 88 'ret' 'ret_ln0' <Predicate = (!icmp_ln26)> <Delay = 0.00>

State 11 <SV = 10> <Delay = 10.3>
ST_11 : Operation 78 [3/4] (10.3ns)   --->   "%add = fadd i32 %regc_load, i32 %mul" [first_accel/matprod.cpp:29]   --->   Operation 78 'fadd' 'add' <Predicate = (!icmp_ln28)> <Delay = 10.3> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.3> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 10.3>
ST_12 : Operation 79 [2/4] (10.3ns)   --->   "%add = fadd i32 %regc_load, i32 %mul" [first_accel/matprod.cpp:29]   --->   Operation 79 'fadd' 'add' <Predicate = (!icmp_ln28)> <Delay = 10.3> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.3> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 14.4>
ST_13 : Operation 80 [1/1] (0.00ns)   --->   "%specloopname_ln27 = specloopname void @_ssdm_op_SpecLoopName, void @empty_14" [first_accel/matprod.cpp:27]   --->   Operation 80 'specloopname' 'specloopname_ln27' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 81 [1/4] (10.3ns)   --->   "%add = fadd i32 %regc_load, i32 %mul" [first_accel/matprod.cpp:29]   --->   Operation 81 'fadd' 'add' <Predicate = (!icmp_ln28)> <Delay = 10.3> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 10.3> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 82 [1/1] (0.79ns)   --->   "%select_ln28 = select i1 %icmp_ln28, i32 %mul, i32 %add" [first_accel/matprod.cpp:28]   --->   Operation 82 'select' 'select_ln28' <Predicate = true> <Delay = 0.79> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 83 [1/1] (0.00ns)   --->   "%store_ln28 = store i32 %select_ln28, i32 %regc" [first_accel/matprod.cpp:28]   --->   Operation 83 'store' 'store_ln28' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 84 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i10 %add_ln33" [first_accel/matprod.cpp:33]   --->   Operation 84 'zext' 'zext_ln33' <Predicate = (icmp_ln31)> <Delay = 0.00>
ST_13 : Operation 85 [1/1] (0.00ns)   --->   "%m3_buffer_addr = getelementptr i32 %m3_buffer, i64 0, i64 %zext_ln33" [first_accel/matprod.cpp:33]   --->   Operation 85 'getelementptr' 'm3_buffer_addr' <Predicate = (icmp_ln31)> <Delay = 0.00>
ST_13 : Operation 86 [1/1] (3.25ns)   --->   "%store_ln33 = store i32 %select_ln28, i10 %m3_buffer_addr" [first_accel/matprod.cpp:33]   --->   Operation 86 'store' 'store_ln33' <Predicate = (icmp_ln31)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_13 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln36 = br void %if.end26" [first_accel/matprod.cpp:36]   --->   Operation 87 'br' 'br_ln36' <Predicate = (icmp_ln31)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 20ns, clock uncertainty: 5.4ns.

 <State 1>: 1.61ns
The critical path consists of the following:
	'alloca' operation ('i') [12]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on local variable 'i' [18]  (1.61 ns)

 <State 2>: 7.73ns
The critical path consists of the following:
	'load' operation ('j_load') on local variable 'j' [29]  (0 ns)
	'add' operation ('j', first_accel/matprod.cpp:34) [62]  (2.7 ns)
	'icmp' operation ('icmp_ln35', first_accel/matprod.cpp:35) [63]  (2.44 ns)
	'select' operation ('i', first_accel/matprod.cpp:35) [65]  (0.796 ns)
	'store' operation ('store_ln36', first_accel/matprod.cpp:36) of variable 'i', first_accel/matprod.cpp:35 on local variable 'i' [67]  (1.61 ns)
	blocking operation 0.182 ns on control path)

 <State 3>: 1.45ns
The critical path consists of the following:
	'mul' operation of DSP[35] ('mul_ln27', first_accel/matprod.cpp:27) [34]  (1.45 ns)

 <State 4>: 2.1ns
The critical path consists of the following:
	'mul' operation of DSP[35] ('mul_ln27', first_accel/matprod.cpp:27) [34]  (0 ns)
	'add' operation of DSP[35] ('add_ln27', first_accel/matprod.cpp:27) [35]  (2.1 ns)

 <State 5>: 5.36ns
The critical path consists of the following:
	'add' operation of DSP[35] ('add_ln27', first_accel/matprod.cpp:27) [35]  (2.1 ns)
	'getelementptr' operation ('m1_buffer_addr', first_accel/matprod.cpp:27) [37]  (0 ns)
	'load' operation ('m1_buffer_load', first_accel/matprod.cpp:27) on array 'm1_buffer' [38]  (3.26 ns)

 <State 6>: 5.36ns
The critical path consists of the following:
	'add' operation of DSP[40] ('add_ln27_1', first_accel/matprod.cpp:27) [40]  (2.1 ns)
	'getelementptr' operation ('m2_buffer_addr', first_accel/matprod.cpp:27) [42]  (0 ns)
	'load' operation ('m2_buffer_load', first_accel/matprod.cpp:27) on array 'm2_buffer' [43]  (3.26 ns)

 <State 7>: 3.26ns
The critical path consists of the following:
	'load' operation ('m2_buffer_load', first_accel/matprod.cpp:27) on array 'm2_buffer' [43]  (3.26 ns)

 <State 8>: 12.6ns
The critical path consists of the following:
	'fmul' operation ('mul', first_accel/matprod.cpp:27) [44]  (12.6 ns)

 <State 9>: 12.6ns
The critical path consists of the following:
	'fmul' operation ('mul', first_accel/matprod.cpp:27) [44]  (12.6 ns)

 <State 10>: 10.4ns
The critical path consists of the following:
	'load' operation ('regc_load', first_accel/matprod.cpp:29) on static variable 'regc' [46]  (0 ns)
	'fadd' operation ('add', first_accel/matprod.cpp:29) [47]  (10.4 ns)

 <State 11>: 10.4ns
The critical path consists of the following:
	'fadd' operation ('add', first_accel/matprod.cpp:29) [47]  (10.4 ns)

 <State 12>: 10.4ns
The critical path consists of the following:
	'fadd' operation ('add', first_accel/matprod.cpp:29) [47]  (10.4 ns)

 <State 13>: 14.4ns
The critical path consists of the following:
	'fadd' operation ('add', first_accel/matprod.cpp:29) [47]  (10.4 ns)
	'select' operation ('select_ln28', first_accel/matprod.cpp:28) [48]  (0.796 ns)
	'store' operation ('store_ln33', first_accel/matprod.cpp:33) of variable 'select_ln28', first_accel/matprod.cpp:28 on array 'm3_buffer' [61]  (3.26 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
