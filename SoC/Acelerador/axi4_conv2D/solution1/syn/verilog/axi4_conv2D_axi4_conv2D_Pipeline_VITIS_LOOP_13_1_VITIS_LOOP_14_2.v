// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module axi4_conv2D_axi4_conv2D_Pipeline_VITIS_LOOP_13_1_VITIS_LOOP_14_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        image_out,
        add_ln186_15,
        add_ln186_13,
        add_ln186_11,
        add_ln186_9,
        add_ln186_7,
        add_ln186_5,
        add_ln186_3,
        add_ln186_1,
        weights,
        image_in,
        add_ln186_18,
        add_ln186_19,
        acc_V,
        trunc_ln
);

parameter    ap_ST_fsm_pp0_stage0 = 18'd1;
parameter    ap_ST_fsm_pp0_stage1 = 18'd2;
parameter    ap_ST_fsm_pp0_stage2 = 18'd4;
parameter    ap_ST_fsm_pp0_stage3 = 18'd8;
parameter    ap_ST_fsm_pp0_stage4 = 18'd16;
parameter    ap_ST_fsm_pp0_stage5 = 18'd32;
parameter    ap_ST_fsm_pp0_stage6 = 18'd64;
parameter    ap_ST_fsm_pp0_stage7 = 18'd128;
parameter    ap_ST_fsm_pp0_stage8 = 18'd256;
parameter    ap_ST_fsm_pp0_stage9 = 18'd512;
parameter    ap_ST_fsm_pp0_stage10 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 18'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [7:0] m_axi_gmem_WDATA;
output  [0:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [7:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [10:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] image_out;
input  [63:0] add_ln186_15;
input  [63:0] add_ln186_13;
input  [63:0] add_ln186_11;
input  [63:0] add_ln186_9;
input  [63:0] add_ln186_7;
input  [63:0] add_ln186_5;
input  [63:0] add_ln186_3;
input  [63:0] add_ln186_1;
input  [63:0] weights;
input  [63:0] image_in;
input  [63:0] add_ln186_18;
input  [63:0] add_ln186_19;
input  [20:0] acc_V;
input  [7:0] trunc_ln;

reg ap_idle;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage12;
reg   [0:0] icmp_ln1027_reg_1157;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
wire    ap_block_state31_pp0_stage12_iter1;
reg    ap_block_pp0_stage12_subdone;
reg    ap_condition_exit_pp0_iter0_stage12;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage17;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage17_subdone;
reg    gmem_blk_n_W;
wire    ap_block_pp0_stage12;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage17;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state19_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] gmem_addr_1_reg_1103;
reg   [63:0] gmem_addr_3_reg_1109;
reg   [63:0] gmem_addr_5_reg_1115;
reg   [63:0] gmem_addr_7_reg_1121;
reg   [63:0] gmem_addr_9_reg_1127;
reg   [63:0] gmem_addr_11_reg_1133;
reg   [63:0] gmem_addr_13_reg_1139;
reg   [63:0] gmem_addr_15_reg_1145;
reg   [63:0] gmem_addr_17_reg_1151;
wire   [0:0] icmp_ln1027_fu_521_p2;
reg   [4:0] indvars_iv_load_reg_1161;
reg   [4:0] indvars_iv34_load_reg_1166;
wire   [0:0] icmp_ln1027_1_fu_542_p2;
reg   [0:0] icmp_ln1027_1_reg_1172;
wire   [4:0] add_ln13_fu_548_p2;
reg   [4:0] add_ln13_reg_1178;
wire   [4:0] indvars_iv17_mid2_fu_554_p3;
reg   [4:0] indvars_iv17_mid2_reg_1183;
reg   [63:0] gmem_addr_2_reg_1189;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state20_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg   [63:0] gmem_addr_4_reg_1195;
reg   [63:0] gmem_addr_6_reg_1201;
reg   [63:0] gmem_addr_8_reg_1207;
reg   [63:0] gmem_addr_10_reg_1213;
reg   [63:0] gmem_addr_12_reg_1219;
reg   [63:0] gmem_addr_14_reg_1225;
reg   [63:0] gmem_addr_16_reg_1231;
reg   [63:0] gmem_addr_18_reg_1237;
reg  signed [7:0] gmem_addr_17_read_reg_1243;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state9_io;
wire    ap_block_state27_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
reg   [7:0] gmem_addr_2_read_reg_1248;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_state10_io;
wire    ap_block_state28_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_11001;
wire  signed [15:0] mul_ln1494_fu_681_p2;
reg  signed [15:0] mul_ln1494_reg_1253;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_state11_io;
wire    ap_block_state29_pp0_stage10_iter1;
reg    ap_block_pp0_stage10_11001;
reg  signed [7:0] gmem_addr_15_read_reg_1258;
wire   [7:0] add_ln186_20_fu_691_p2;
reg   [7:0] add_ln186_20_reg_1263;
reg   [7:0] add_ln186_20_reg_1263_pp0_iter1_reg;
reg   [7:0] gmem_addr_4_read_reg_1268;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
wire    ap_block_state30_pp0_stage11_iter1;
reg    ap_block_pp0_stage11_11001;
wire  signed [15:0] mul_ln1494_1_fu_702_p2;
reg  signed [15:0] mul_ln1494_1_reg_1273;
reg    ap_block_pp0_stage12_11001;
wire   [7:0] trunc_ln840_1_fu_708_p1;
reg   [7:0] trunc_ln840_1_reg_1278;
reg  signed [7:0] gmem_addr_13_read_reg_1283;
reg   [7:0] gmem_addr_6_read_reg_1288;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage13_11001;
wire  signed [15:0] mul_ln1494_2_fu_718_p2;
reg  signed [15:0] mul_ln1494_2_reg_1293;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage14_11001;
wire   [7:0] trunc_ln840_2_fu_724_p1;
reg   [7:0] trunc_ln840_2_reg_1298;
reg  signed [7:0] gmem_addr_11_read_reg_1303;
reg   [7:0] gmem_addr_8_read_reg_1308;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage15_11001;
wire   [7:0] trunc_ln840_3_fu_747_p1;
reg   [7:0] trunc_ln840_3_reg_1313;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage16_11001;
reg  signed [7:0] gmem_addr_9_read_reg_1318;
wire   [16:0] add_ln840_4_fu_751_p2;
reg   [16:0] add_ln840_4_reg_1323;
reg   [7:0] gmem_addr_10_read_reg_1328;
reg    ap_block_pp0_stage17_11001;
wire   [7:0] add_ln186_22_fu_777_p2;
reg   [7:0] add_ln186_22_reg_1333;
wire  signed [15:0] mul_ln1494_4_fu_808_p2;
reg  signed [15:0] mul_ln1494_4_reg_1338;
wire   [7:0] trunc_ln840_4_fu_814_p1;
reg   [7:0] trunc_ln840_4_reg_1343;
reg  signed [7:0] gmem_addr_7_read_reg_1348;
reg   [7:0] gmem_addr_12_read_reg_1353;
wire   [7:0] trunc_ln840_5_fu_837_p1;
reg   [7:0] trunc_ln840_5_reg_1358;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_state21_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
reg  signed [7:0] gmem_addr_5_read_reg_1363;
wire   [16:0] add_ln840_1_fu_841_p2;
reg   [16:0] add_ln840_1_reg_1368;
reg   [7:0] gmem_addr_14_read_reg_1373;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_state22_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
wire   [7:0] trunc_ln840_6_fu_863_p1;
reg   [7:0] trunc_ln840_6_reg_1378;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state5_io;
reg    ap_block_state23_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
reg  signed [7:0] gmem_addr_3_read_reg_1383;
wire   [20:0] add_ln840_fu_867_p2;
reg   [20:0] add_ln840_reg_1388;
reg   [7:0] gmem_addr_16_read_reg_1393;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state6_io;
reg    ap_block_state24_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
wire   [7:0] trunc_ln840_7_fu_888_p1;
reg   [7:0] trunc_ln840_7_reg_1398;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_state25_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
reg  signed [7:0] gmem_addr_1_read_reg_1403;
wire   [17:0] add_ln840_2_fu_895_p2;
reg   [17:0] add_ln840_2_reg_1408;
reg   [7:0] gmem_addr_18_read_reg_1413;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
reg    ap_block_state26_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] trunc_ln840_8_fu_920_p1;
reg   [7:0] trunc_ln840_8_reg_1418;
wire   [16:0] add_ln840_5_fu_924_p2;
reg   [16:0] add_ln840_5_reg_1423;
wire   [18:0] add_ln840_7_fu_949_p2;
reg   [18:0] add_ln840_7_reg_1428;
wire   [7:0] add_ln186_26_fu_959_p2;
reg   [7:0] add_ln186_26_reg_1433;
wire   [7:0] add_ln186_27_fu_968_p2;
reg   [7:0] add_ln186_27_reg_1438;
wire   [7:0] acc_sat_fu_1037_p3;
reg   [7:0] acc_sat_reg_1443;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] add_ln186_fu_570_p2;
wire   [63:0] add_ln186_2_fu_581_p2;
wire   [63:0] add_ln186_4_fu_593_p2;
wire   [63:0] add_ln186_6_fu_605_p2;
wire   [63:0] add_ln186_8_fu_616_p2;
wire   [63:0] add_ln186_10_fu_628_p2;
wire   [63:0] add_ln186_12_fu_640_p2;
wire   [63:0] add_ln186_14_fu_651_p2;
wire   [63:0] add_ln186_16_fu_663_p2;
reg    ap_block_pp0_stage12_01001;
reg   [4:0] indvars_iv17_fu_108;
wire   [4:0] add_ln14_fu_782_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_indvars_iv17_load;
reg   [4:0] indvars_iv_fu_112;
wire   [4:0] select_ln1027_1_fu_768_p3;
reg   [4:0] ap_sig_allocacmp_indvars_iv_load;
reg   [4:0] indvars_iv34_fu_116;
wire   [4:0] select_ln1027_fu_762_p3;
reg   [4:0] ap_sig_allocacmp_indvars_iv34_load;
reg   [4:0] indvar_flatten_fu_120;
wire   [4:0] add_ln1027_fu_527_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [63:0] indvars_iv17_cast_fu_567_p1;
wire   [7:0] mul_ln1494_fu_681_p0;
wire   [7:0] trunc_ln840_fu_687_p1;
wire   [7:0] mul_ln1494_1_fu_702_p0;
wire   [7:0] mul_ln1494_2_fu_718_p0;
wire   [7:0] mul_ln1494_3_fu_737_p0;
wire  signed [15:0] mul_ln1494_3_fu_737_p2;
wire  signed [16:0] sext_ln840_3_fu_743_p1;
wire  signed [16:0] sext_ln840_fu_728_p1;
wire   [4:0] add_ln13_1_fu_757_p2;
wire   [7:0] add_ln186_21_fu_773_p2;
wire   [7:0] mul_ln1494_4_fu_808_p0;
wire   [7:0] mul_ln1494_5_fu_827_p0;
wire  signed [15:0] mul_ln1494_5_fu_827_p2;
wire  signed [16:0] sext_ln840_5_fu_833_p1;
wire  signed [16:0] sext_ln840_4_fu_818_p1;
wire   [7:0] mul_ln1494_6_fu_853_p0;
wire  signed [15:0] mul_ln1494_6_fu_853_p2;
wire  signed [20:0] sext_ln840_6_fu_859_p1;
wire   [7:0] mul_ln1494_7_fu_878_p0;
wire  signed [15:0] mul_ln1494_7_fu_878_p2;
wire  signed [17:0] sext_ln840_9_fu_892_p1;
wire  signed [17:0] sext_ln840_7_fu_884_p1;
wire   [7:0] mul_ln1494_8_fu_910_p0;
wire  signed [15:0] mul_ln1494_8_fu_910_p2;
wire  signed [16:0] sext_ln840_1_fu_901_p1;
wire  signed [16:0] sext_ln840_8_fu_916_p1;
wire  signed [17:0] sext_ln840_12_fu_936_p1;
wire  signed [17:0] sext_ln840_2_fu_930_p1;
wire   [17:0] add_ln840_6_fu_939_p2;
wire  signed [18:0] sext_ln840_13_fu_945_p1;
wire  signed [18:0] sext_ln840_11_fu_933_p1;
wire   [7:0] add_ln186_25_fu_955_p2;
wire   [7:0] add_ln186_24_fu_964_p2;
wire  signed [20:0] sext_ln840_10_fu_973_p1;
wire  signed [20:0] sext_ln840_14_fu_981_p1;
wire   [20:0] add_ln840_3_fu_976_p2;
wire   [20:0] add_ln840_8_fu_984_p2;
wire   [12:0] tmp_fu_990_p4;
wire   [7:0] add_ln186_23_fu_1014_p2;
wire   [0:0] icmp_ln1035_fu_1000_p2;
wire   [0:0] tmp_1_fu_1006_p3;
wire   [0:0] or_ln1035_fu_1031_p2;
wire   [7:0] select_ln1035_fu_1023_p3;
wire   [7:0] add_ln186_17_fu_1018_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [17:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [15:0] mul_ln1494_1_fu_702_p00;
wire   [15:0] mul_ln1494_2_fu_718_p00;
wire   [15:0] mul_ln1494_3_fu_737_p00;
wire   [15:0] mul_ln1494_4_fu_808_p00;
wire   [15:0] mul_ln1494_5_fu_827_p00;
wire   [15:0] mul_ln1494_6_fu_853_p00;
wire   [15:0] mul_ln1494_7_fu_878_p00;
wire   [15:0] mul_ln1494_8_fu_910_p00;
wire   [15:0] mul_ln1494_fu_681_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U1(
    .din0(mul_ln1494_fu_681_p0),
    .din1(gmem_addr_17_read_reg_1243),
    .dout(mul_ln1494_fu_681_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U2(
    .din0(mul_ln1494_1_fu_702_p0),
    .din1(gmem_addr_15_read_reg_1258),
    .dout(mul_ln1494_1_fu_702_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U3(
    .din0(mul_ln1494_2_fu_718_p0),
    .din1(gmem_addr_13_read_reg_1283),
    .dout(mul_ln1494_2_fu_718_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U4(
    .din0(mul_ln1494_3_fu_737_p0),
    .din1(gmem_addr_11_read_reg_1303),
    .dout(mul_ln1494_3_fu_737_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U5(
    .din0(mul_ln1494_4_fu_808_p0),
    .din1(gmem_addr_9_read_reg_1318),
    .dout(mul_ln1494_4_fu_808_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U6(
    .din0(mul_ln1494_5_fu_827_p0),
    .din1(gmem_addr_7_read_reg_1348),
    .dout(mul_ln1494_5_fu_827_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U7(
    .din0(mul_ln1494_6_fu_853_p0),
    .din1(gmem_addr_5_read_reg_1363),
    .dout(mul_ln1494_6_fu_853_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U8(
    .din0(mul_ln1494_7_fu_878_p0),
    .din1(gmem_addr_3_read_reg_1383),
    .dout(mul_ln1494_7_fu_878_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U9(
    .din0(mul_ln1494_8_fu_910_p0),
    .din1(gmem_addr_1_read_reg_1403),
    .dout(mul_ln1494_8_fu_910_p2)
);

axi4_conv2D_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage12),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage12)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln1027_fu_521_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_120 <= add_ln1027_fu_527_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvars_iv17_fu_108 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        indvars_iv17_fu_108 <= add_ln14_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvars_iv34_fu_116 <= 5'd4;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        indvars_iv34_fu_116 <= select_ln1027_fu_762_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvars_iv_fu_112 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        indvars_iv_fu_112 <= select_ln1027_1_fu_768_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001))) begin
        acc_sat_reg_1443 <= acc_sat_fu_1037_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_521_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln13_reg_1178 <= add_ln13_fu_548_p2;
        icmp_ln1027_1_reg_1172 <= icmp_ln1027_1_fu_542_p2;
        indvars_iv17_mid2_reg_1183 <= indvars_iv17_mid2_fu_554_p3;
        indvars_iv34_load_reg_1166 <= ap_sig_allocacmp_indvars_iv34_load;
        indvars_iv_load_reg_1161 <= ap_sig_allocacmp_indvars_iv_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        add_ln186_20_reg_1263 <= add_ln186_20_fu_691_p2;
        gmem_addr_15_read_reg_1258 <= m_axi_gmem_RDATA;
        mul_ln1494_reg_1253 <= mul_ln1494_fu_681_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        add_ln186_20_reg_1263_pp0_iter1_reg <= add_ln186_20_reg_1263;
        add_ln186_27_reg_1438 <= add_ln186_27_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        add_ln186_22_reg_1333 <= add_ln186_22_fu_777_p2;
        gmem_addr_10_read_reg_1328 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        add_ln186_26_reg_1433 <= add_ln186_26_fu_959_p2;
        add_ln840_7_reg_1428 <= add_ln840_7_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln840_1_reg_1368 <= add_ln840_1_fu_841_p2;
        gmem_addr_5_read_reg_1363 <= m_axi_gmem_RDATA;
        trunc_ln840_5_reg_1358 <= trunc_ln840_5_fu_837_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        add_ln840_2_reg_1408 <= add_ln840_2_fu_895_p2;
        gmem_addr_1_read_reg_1403 <= m_axi_gmem_RDATA;
        trunc_ln840_7_reg_1398 <= trunc_ln840_7_fu_888_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        add_ln840_4_reg_1323 <= add_ln840_4_fu_751_p2;
        gmem_addr_9_read_reg_1318 <= m_axi_gmem_RDATA;
        trunc_ln840_3_reg_1313 <= trunc_ln840_3_fu_747_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln840_5_reg_1423 <= add_ln840_5_fu_924_p2;
        trunc_ln840_8_reg_1418 <= trunc_ln840_8_fu_920_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln840_reg_1388 <= add_ln840_fu_867_p2;
        gmem_addr_3_read_reg_1383 <= m_axi_gmem_RDATA;
        trunc_ln840_6_reg_1378 <= trunc_ln840_6_fu_863_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_10_reg_1213 <= add_ln186_8_fu_616_p2;
        gmem_addr_12_reg_1219 <= add_ln186_10_fu_628_p2;
        gmem_addr_14_reg_1225 <= add_ln186_12_fu_640_p2;
        gmem_addr_16_reg_1231 <= add_ln186_14_fu_651_p2;
        gmem_addr_18_reg_1237 <= add_ln186_16_fu_663_p2;
        gmem_addr_2_reg_1189 <= add_ln186_fu_570_p2;
        gmem_addr_4_reg_1195 <= add_ln186_2_fu_581_p2;
        gmem_addr_6_reg_1201 <= add_ln186_4_fu_593_p2;
        gmem_addr_8_reg_1207 <= add_ln186_6_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_11_read_reg_1303 <= m_axi_gmem_RDATA;
        mul_ln1494_2_reg_1293 <= mul_ln1494_2_fu_718_p2;
        trunc_ln840_2_reg_1298 <= trunc_ln840_2_fu_724_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem_addr_11_reg_1133 <= add_ln186_5;
        gmem_addr_13_reg_1139 <= add_ln186_3;
        gmem_addr_15_reg_1145 <= add_ln186_1;
        gmem_addr_17_reg_1151 <= weights;
        gmem_addr_1_reg_1103 <= add_ln186_15;
        gmem_addr_3_reg_1109 <= add_ln186_13;
        gmem_addr_5_reg_1115 <= add_ln186_11;
        gmem_addr_7_read_reg_1348 <= m_axi_gmem_RDATA;
        gmem_addr_7_reg_1121 <= add_ln186_9;
        gmem_addr_9_reg_1127 <= add_ln186_7;
        icmp_ln1027_reg_1157 <= icmp_ln1027_fu_521_p2;
        mul_ln1494_4_reg_1338 <= mul_ln1494_4_fu_808_p2;
        trunc_ln840_4_reg_1343 <= trunc_ln840_4_fu_814_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem_addr_12_read_reg_1353 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_13_read_reg_1283 <= m_axi_gmem_RDATA;
        mul_ln1494_1_reg_1273 <= mul_ln1494_1_fu_702_p2;
        trunc_ln840_1_reg_1278 <= trunc_ln840_1_fu_708_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem_addr_14_read_reg_1373 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem_addr_16_read_reg_1393 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_17_read_reg_1243 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem_addr_18_read_reg_1413 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_2_read_reg_1248 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_4_read_reg_1268 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_6_read_reg_1288 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        gmem_addr_8_read_reg_1308 <= m_axi_gmem_RDATA;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_subdone) & (icmp_ln1027_reg_1157 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage12 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage12_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_120;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv17_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv17_load = indvars_iv17_fu_108;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv34_load = 5'd4;
    end else begin
        ap_sig_allocacmp_indvars_iv34_load = indvars_iv34_fu_116;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv_load = indvars_iv_fu_112;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln1027_reg_1157 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln1027_reg_1157 == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem_ARADDR = gmem_addr_18_reg_1237;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_1_reg_1103;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_16_reg_1231;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_3_reg_1109;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_14_reg_1225;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_5_reg_1115;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_12_reg_1219;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_7_reg_1121;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_10_reg_1213;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_9_reg_1127;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_8_reg_1207;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_11_reg_1133;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_6_reg_1201;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_13_reg_1139;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_4_reg_1195;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_15_reg_1145;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_2_reg_1189;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_1157 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_17_reg_1151;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln1027_reg_1157 == 1'd0)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln1027_reg_1157 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln1027_reg_1157 == 1'd0)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage12)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_sat_fu_1037_p3 = ((or_ln1035_fu_1031_p2[0:0] == 1'b1) ? select_ln1035_fu_1023_p3 : add_ln186_17_fu_1018_p2);

assign add_ln1027_fu_527_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign add_ln13_1_fu_757_p2 = (indvars_iv34_load_reg_1166 + 5'd6);

assign add_ln13_fu_548_p2 = (ap_sig_allocacmp_indvars_iv_load + 5'd6);

assign add_ln14_fu_782_p2 = (indvars_iv17_mid2_reg_1183 + 5'd1);

assign add_ln186_10_fu_628_p2 = (add_ln186_6_fu_605_p2 + 64'd2);

assign add_ln186_12_fu_640_p2 = (add_ln186_19 + indvars_iv17_cast_fu_567_p1);

assign add_ln186_14_fu_651_p2 = (add_ln186_12_fu_640_p2 + 64'd1);

assign add_ln186_16_fu_663_p2 = (add_ln186_12_fu_640_p2 + 64'd2);

assign add_ln186_17_fu_1018_p2 = (add_ln186_27_reg_1438 + add_ln186_23_fu_1014_p2);

assign add_ln186_20_fu_691_p2 = (trunc_ln840_fu_687_p1 + trunc_ln);

assign add_ln186_21_fu_773_p2 = (trunc_ln840_2_reg_1298 + trunc_ln840_3_reg_1313);

assign add_ln186_22_fu_777_p2 = (add_ln186_21_fu_773_p2 + trunc_ln840_1_reg_1278);

assign add_ln186_23_fu_1014_p2 = (add_ln186_22_reg_1333 + add_ln186_20_reg_1263_pp0_iter1_reg);

assign add_ln186_24_fu_964_p2 = (trunc_ln840_4_reg_1343 + trunc_ln840_5_reg_1358);

assign add_ln186_25_fu_955_p2 = (trunc_ln840_7_reg_1398 + trunc_ln840_8_reg_1418);

assign add_ln186_26_fu_959_p2 = (add_ln186_25_fu_955_p2 + trunc_ln840_6_reg_1378);

assign add_ln186_27_fu_968_p2 = (add_ln186_26_reg_1433 + add_ln186_24_fu_964_p2);

assign add_ln186_2_fu_581_p2 = (add_ln186_fu_570_p2 + 64'd1);

assign add_ln186_4_fu_593_p2 = (add_ln186_fu_570_p2 + 64'd2);

assign add_ln186_6_fu_605_p2 = (add_ln186_18 + indvars_iv17_cast_fu_567_p1);

assign add_ln186_8_fu_616_p2 = (add_ln186_6_fu_605_p2 + 64'd1);

assign add_ln186_fu_570_p2 = (indvars_iv17_cast_fu_567_p1 + image_in);

assign add_ln840_1_fu_841_p2 = ($signed(sext_ln840_5_fu_833_p1) + $signed(sext_ln840_4_fu_818_p1));

assign add_ln840_2_fu_895_p2 = ($signed(sext_ln840_9_fu_892_p1) + $signed(sext_ln840_7_fu_884_p1));

assign add_ln840_3_fu_976_p2 = ($signed(sext_ln840_10_fu_973_p1) + $signed(add_ln840_reg_1388));

assign add_ln840_4_fu_751_p2 = ($signed(sext_ln840_3_fu_743_p1) + $signed(sext_ln840_fu_728_p1));

assign add_ln840_5_fu_924_p2 = ($signed(sext_ln840_1_fu_901_p1) + $signed(sext_ln840_8_fu_916_p1));

assign add_ln840_6_fu_939_p2 = ($signed(sext_ln840_12_fu_936_p1) + $signed(sext_ln840_2_fu_930_p1));

assign add_ln840_7_fu_949_p2 = ($signed(sext_ln840_13_fu_945_p1) + $signed(sext_ln840_11_fu_933_p1));

assign add_ln840_8_fu_984_p2 = ($signed(sext_ln840_14_fu_981_p1) + $signed(add_ln840_3_fu_976_p2));

assign add_ln840_fu_867_p2 = ($signed(acc_V) + $signed(sext_ln840_6_fu_859_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_gmem_RVALID == 1'b0) | (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((m_axi_gmem_RVALID == 1'b0) | (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = (((m_axi_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0)))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)) | ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0))));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state17_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state18_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage0_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage1_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state21_pp0_stage2_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state22_pp0_stage3_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp0_stage4_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage5_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state25_pp0_stage6_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state26_pp0_stage7_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state27_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((m_axi_gmem_RVALID == 1'b0) & (icmp_ln1027_reg_1157 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage12;

assign icmp_ln1027_1_fu_542_p2 = ((ap_sig_allocacmp_indvars_iv17_load == ap_sig_allocacmp_indvars_iv34_load) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_521_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_1000_p2 = (($signed(tmp_fu_990_p4) > $signed(13'd0)) ? 1'b1 : 1'b0);

assign indvars_iv17_cast_fu_567_p1 = indvars_iv17_mid2_reg_1183;

assign indvars_iv17_mid2_fu_554_p3 = ((icmp_ln1027_1_fu_542_p2[0:0] == 1'b1) ? add_ln13_fu_548_p2 : ap_sig_allocacmp_indvars_iv17_load);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = acc_sat_reg_1443;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 1'd1;

assign m_axi_gmem_WUSER = 1'd0;

assign mul_ln1494_1_fu_702_p0 = mul_ln1494_1_fu_702_p00;

assign mul_ln1494_1_fu_702_p00 = gmem_addr_4_read_reg_1268;

assign mul_ln1494_2_fu_718_p0 = mul_ln1494_2_fu_718_p00;

assign mul_ln1494_2_fu_718_p00 = gmem_addr_6_read_reg_1288;

assign mul_ln1494_3_fu_737_p0 = mul_ln1494_3_fu_737_p00;

assign mul_ln1494_3_fu_737_p00 = gmem_addr_8_read_reg_1308;

assign mul_ln1494_4_fu_808_p0 = mul_ln1494_4_fu_808_p00;

assign mul_ln1494_4_fu_808_p00 = gmem_addr_10_read_reg_1328;

assign mul_ln1494_5_fu_827_p0 = mul_ln1494_5_fu_827_p00;

assign mul_ln1494_5_fu_827_p00 = gmem_addr_12_read_reg_1353;

assign mul_ln1494_6_fu_853_p0 = mul_ln1494_6_fu_853_p00;

assign mul_ln1494_6_fu_853_p00 = gmem_addr_14_read_reg_1373;

assign mul_ln1494_7_fu_878_p0 = mul_ln1494_7_fu_878_p00;

assign mul_ln1494_7_fu_878_p00 = gmem_addr_16_read_reg_1393;

assign mul_ln1494_8_fu_910_p0 = mul_ln1494_8_fu_910_p00;

assign mul_ln1494_8_fu_910_p00 = gmem_addr_18_read_reg_1413;

assign mul_ln1494_fu_681_p0 = mul_ln1494_fu_681_p00;

assign mul_ln1494_fu_681_p00 = gmem_addr_2_read_reg_1248;

assign or_ln1035_fu_1031_p2 = (tmp_1_fu_1006_p3 | icmp_ln1035_fu_1000_p2);

assign select_ln1027_1_fu_768_p3 = ((icmp_ln1027_1_reg_1172[0:0] == 1'b1) ? add_ln13_reg_1178 : indvars_iv_load_reg_1161);

assign select_ln1027_fu_762_p3 = ((icmp_ln1027_1_reg_1172[0:0] == 1'b1) ? add_ln13_1_fu_757_p2 : indvars_iv34_load_reg_1166);

assign select_ln1035_fu_1023_p3 = ((icmp_ln1035_fu_1000_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign sext_ln840_10_fu_973_p1 = $signed(add_ln840_2_reg_1408);

assign sext_ln840_11_fu_933_p1 = $signed(add_ln840_4_reg_1323);

assign sext_ln840_12_fu_936_p1 = $signed(add_ln840_5_reg_1423);

assign sext_ln840_13_fu_945_p1 = $signed(add_ln840_6_fu_939_p2);

assign sext_ln840_14_fu_981_p1 = $signed(add_ln840_7_reg_1428);

assign sext_ln840_1_fu_901_p1 = mul_ln1494_1_reg_1273;

assign sext_ln840_2_fu_930_p1 = mul_ln1494_2_reg_1293;

assign sext_ln840_3_fu_743_p1 = mul_ln1494_3_fu_737_p2;

assign sext_ln840_4_fu_818_p1 = mul_ln1494_4_reg_1338;

assign sext_ln840_5_fu_833_p1 = mul_ln1494_5_fu_827_p2;

assign sext_ln840_6_fu_859_p1 = mul_ln1494_6_fu_853_p2;

assign sext_ln840_7_fu_884_p1 = mul_ln1494_7_fu_878_p2;

assign sext_ln840_8_fu_916_p1 = mul_ln1494_8_fu_910_p2;

assign sext_ln840_9_fu_892_p1 = $signed(add_ln840_1_reg_1368);

assign sext_ln840_fu_728_p1 = mul_ln1494_reg_1253;

assign tmp_1_fu_1006_p3 = add_ln840_8_fu_984_p2[32'd20];

assign tmp_fu_990_p4 = {{add_ln840_8_fu_984_p2[20:8]}};

assign trunc_ln840_1_fu_708_p1 = mul_ln1494_1_fu_702_p2[7:0];

assign trunc_ln840_2_fu_724_p1 = mul_ln1494_2_fu_718_p2[7:0];

assign trunc_ln840_3_fu_747_p1 = mul_ln1494_3_fu_737_p2[7:0];

assign trunc_ln840_4_fu_814_p1 = mul_ln1494_4_fu_808_p2[7:0];

assign trunc_ln840_5_fu_837_p1 = mul_ln1494_5_fu_827_p2[7:0];

assign trunc_ln840_6_fu_863_p1 = mul_ln1494_6_fu_853_p2[7:0];

assign trunc_ln840_7_fu_888_p1 = mul_ln1494_7_fu_878_p2[7:0];

assign trunc_ln840_8_fu_920_p1 = mul_ln1494_8_fu_910_p2[7:0];

assign trunc_ln840_fu_687_p1 = mul_ln1494_fu_681_p2[7:0];

endmodule //axi4_conv2D_axi4_conv2D_Pipeline_VITIS_LOOP_13_1_VITIS_LOOP_14_2
