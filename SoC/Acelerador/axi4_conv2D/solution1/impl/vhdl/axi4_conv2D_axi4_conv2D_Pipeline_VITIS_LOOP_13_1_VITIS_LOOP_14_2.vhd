-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axi4_conv2D_axi4_conv2D_Pipeline_VITIS_LOOP_13_1_VITIS_LOOP_14_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    image_out : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_15 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_13 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_11 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_9 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_7 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_5 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_3 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_1 : IN STD_LOGIC_VECTOR (63 downto 0);
    weights : IN STD_LOGIC_VECTOR (63 downto 0);
    image_in : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_18 : IN STD_LOGIC_VECTOR (63 downto 0);
    add_ln186_19 : IN STD_LOGIC_VECTOR (63 downto 0);
    acc_V : IN STD_LOGIC_VECTOR (20 downto 0);
    trunc_ln : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of axi4_conv2D_axi4_conv2D_Pipeline_VITIS_LOOP_13_1_VITIS_LOOP_14_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal icmp_ln1027_reg_1157 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state31_pp0_stage12_iter1 : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage12 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal gmem_addr_1_reg_1103 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_3_reg_1109 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_5_reg_1115 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_7_reg_1121 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_9_reg_1127 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_11_reg_1133 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_13_reg_1139 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_15_reg_1145 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_17_reg_1151 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1027_fu_521_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvars_iv_load_reg_1161 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv34_load_reg_1166 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1027_1_fu_542_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_1172 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln13_fu_548_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln13_reg_1178 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv17_mid2_fu_554_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv17_mid2_reg_1183 : STD_LOGIC_VECTOR (4 downto 0);
    signal gmem_addr_2_reg_1189 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gmem_addr_4_reg_1195 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_6_reg_1201 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_8_reg_1207 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_10_reg_1213 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_12_reg_1219 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_14_reg_1225 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_16_reg_1231 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_18_reg_1237 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_17_read_reg_1243 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_state9_io : BOOLEAN;
    signal ap_block_state27_pp0_stage8_iter1 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal gmem_addr_2_read_reg_1248 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_state10_io : BOOLEAN;
    signal ap_block_state28_pp0_stage9_iter1 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal mul_ln1494_fu_681_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_reg_1253 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_state11_io : BOOLEAN;
    signal ap_block_state29_pp0_stage10_iter1 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal gmem_addr_15_read_reg_1258 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_20_fu_691_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_20_reg_1263 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_20_reg_1263_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_4_read_reg_1268 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_state30_pp0_stage11_iter1 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal mul_ln1494_1_fu_702_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_1_reg_1273 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal trunc_ln840_1_fu_708_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_1_reg_1278 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_13_read_reg_1283 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_6_read_reg_1288 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal mul_ln1494_2_fu_718_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_2_reg_1293 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal trunc_ln840_2_fu_724_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_2_reg_1298 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_11_read_reg_1303 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_8_read_reg_1308 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal trunc_ln840_3_fu_747_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_3_reg_1313 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal gmem_addr_9_read_reg_1318 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln840_4_fu_751_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln840_4_reg_1323 : STD_LOGIC_VECTOR (16 downto 0);
    signal gmem_addr_10_read_reg_1328 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal add_ln186_22_fu_777_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_22_reg_1333 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_4_fu_808_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_4_reg_1338 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln840_4_fu_814_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_4_reg_1343 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_7_read_reg_1348 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem_addr_12_read_reg_1353 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_5_fu_837_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_5_reg_1358 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal gmem_addr_5_read_reg_1363 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln840_1_fu_841_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln840_1_reg_1368 : STD_LOGIC_VECTOR (16 downto 0);
    signal gmem_addr_14_read_reg_1373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state22_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln840_6_fu_863_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_6_reg_1378 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_state23_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal gmem_addr_3_read_reg_1383 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln840_fu_867_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln840_reg_1388 : STD_LOGIC_VECTOR (20 downto 0);
    signal gmem_addr_16_read_reg_1393 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_state24_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal trunc_ln840_7_fu_888_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_7_reg_1398 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_state25_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal gmem_addr_1_read_reg_1403 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln840_2_fu_895_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln840_2_reg_1408 : STD_LOGIC_VECTOR (17 downto 0);
    signal gmem_addr_18_read_reg_1413 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state8_io : BOOLEAN;
    signal ap_block_state26_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal trunc_ln840_8_fu_920_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_8_reg_1418 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln840_5_fu_924_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln840_5_reg_1423 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln840_7_fu_949_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln840_7_reg_1428 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln186_26_fu_959_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_26_reg_1433 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_27_fu_968_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_27_reg_1438 : STD_LOGIC_VECTOR (7 downto 0);
    signal acc_sat_fu_1037_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal acc_sat_reg_1443 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal add_ln186_fu_570_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_2_fu_581_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_4_fu_593_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_6_fu_605_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_8_fu_616_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_10_fu_628_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_12_fu_640_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_14_fu_651_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_16_fu_663_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage12_01001 : BOOLEAN;
    signal indvars_iv17_fu_108 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln14_fu_782_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_indvars_iv17_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv_fu_112 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1027_1_fu_768_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_indvars_iv_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv34_fu_116 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1027_fu_762_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_indvars_iv34_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_120 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1027_fu_527_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvars_iv17_cast_fu_567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln1494_fu_681_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln840_fu_687_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_1_fu_702_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_2_fu_718_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_3_fu_737_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_3_fu_737_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln840_3_fu_743_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln840_fu_728_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln13_1_fu_757_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln186_21_fu_773_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_4_fu_808_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_5_fu_827_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_5_fu_827_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln840_5_fu_833_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln840_4_fu_818_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln1494_6_fu_853_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_6_fu_853_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln840_6_fu_859_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal mul_ln1494_7_fu_878_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_7_fu_878_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln840_9_fu_892_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln840_7_fu_884_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln1494_8_fu_910_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln1494_8_fu_910_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln840_1_fu_901_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln840_8_fu_916_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln840_12_fu_936_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln840_2_fu_930_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln840_6_fu_939_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln840_13_fu_945_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln840_11_fu_933_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln186_25_fu_955_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_24_fu_964_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln840_10_fu_973_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sext_ln840_14_fu_981_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln840_3_fu_976_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln840_8_fu_984_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_fu_990_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln186_23_fu_1014_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln1035_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1006_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1035_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1035_fu_1023_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln186_17_fu_1018_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal mul_ln1494_1_fu_702_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_2_fu_718_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_3_fu_737_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_4_fu_808_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_5_fu_827_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_6_fu_853_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_7_fu_878_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_8_fu_910_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1494_fu_681_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component axi4_conv2D_mul_8ns_8s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component axi4_conv2D_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_8ns_8s_16_1_1_U1 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_fu_681_p0,
        din1 => gmem_addr_17_read_reg_1243,
        dout => mul_ln1494_fu_681_p2);

    mul_8ns_8s_16_1_1_U2 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_1_fu_702_p0,
        din1 => gmem_addr_15_read_reg_1258,
        dout => mul_ln1494_1_fu_702_p2);

    mul_8ns_8s_16_1_1_U3 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_2_fu_718_p0,
        din1 => gmem_addr_13_read_reg_1283,
        dout => mul_ln1494_2_fu_718_p2);

    mul_8ns_8s_16_1_1_U4 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_3_fu_737_p0,
        din1 => gmem_addr_11_read_reg_1303,
        dout => mul_ln1494_3_fu_737_p2);

    mul_8ns_8s_16_1_1_U5 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_4_fu_808_p0,
        din1 => gmem_addr_9_read_reg_1318,
        dout => mul_ln1494_4_fu_808_p2);

    mul_8ns_8s_16_1_1_U6 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_5_fu_827_p0,
        din1 => gmem_addr_7_read_reg_1348,
        dout => mul_ln1494_5_fu_827_p2);

    mul_8ns_8s_16_1_1_U7 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_6_fu_853_p0,
        din1 => gmem_addr_5_read_reg_1363,
        dout => mul_ln1494_6_fu_853_p2);

    mul_8ns_8s_16_1_1_U8 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_7_fu_878_p0,
        din1 => gmem_addr_3_read_reg_1383,
        dout => mul_ln1494_7_fu_878_p2);

    mul_8ns_8s_16_1_1_U9 : component axi4_conv2D_mul_8ns_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln1494_8_fu_910_p0,
        din1 => gmem_addr_1_read_reg_1403,
        dout => mul_ln1494_8_fu_910_p2);

    flow_control_loop_pipe_sequential_init_U : component axi4_conv2D_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage12,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage12_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage12)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln1027_fu_521_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten_fu_120 <= add_ln1027_fu_527_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_120 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    indvars_iv17_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvars_iv17_fu_108 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
                indvars_iv17_fu_108 <= add_ln14_fu_782_p2;
            end if; 
        end if;
    end process;

    indvars_iv34_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvars_iv34_fu_116 <= ap_const_lv5_4;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
                indvars_iv34_fu_116 <= select_ln1027_fu_762_p3;
            end if; 
        end if;
    end process;

    indvars_iv_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvars_iv_fu_112 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
                indvars_iv_fu_112 <= select_ln1027_1_fu_768_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001))) then
                acc_sat_reg_1443 <= acc_sat_fu_1037_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_521_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln13_reg_1178 <= add_ln13_fu_548_p2;
                icmp_ln1027_1_reg_1172 <= icmp_ln1027_1_fu_542_p2;
                indvars_iv17_mid2_reg_1183 <= indvars_iv17_mid2_fu_554_p3;
                indvars_iv34_load_reg_1166 <= ap_sig_allocacmp_indvars_iv34_load;
                indvars_iv_load_reg_1161 <= ap_sig_allocacmp_indvars_iv_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                add_ln186_20_reg_1263 <= add_ln186_20_fu_691_p2;
                gmem_addr_15_read_reg_1258 <= m_axi_gmem_RDATA;
                mul_ln1494_reg_1253 <= mul_ln1494_fu_681_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                add_ln186_20_reg_1263_pp0_iter1_reg <= add_ln186_20_reg_1263;
                add_ln186_27_reg_1438 <= add_ln186_27_fu_968_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                add_ln186_22_reg_1333 <= add_ln186_22_fu_777_p2;
                gmem_addr_10_read_reg_1328 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001))) then
                add_ln186_26_reg_1433 <= add_ln186_26_fu_959_p2;
                add_ln840_7_reg_1428 <= add_ln840_7_fu_949_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln840_1_reg_1368 <= add_ln840_1_fu_841_p2;
                gmem_addr_5_read_reg_1363 <= m_axi_gmem_RDATA;
                trunc_ln840_5_reg_1358 <= trunc_ln840_5_fu_837_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                add_ln840_2_reg_1408 <= add_ln840_2_fu_895_p2;
                gmem_addr_1_read_reg_1403 <= m_axi_gmem_RDATA;
                trunc_ln840_7_reg_1398 <= trunc_ln840_7_fu_888_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                add_ln840_4_reg_1323 <= add_ln840_4_fu_751_p2;
                gmem_addr_9_read_reg_1318 <= m_axi_gmem_RDATA;
                trunc_ln840_3_reg_1313 <= trunc_ln840_3_fu_747_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                add_ln840_5_reg_1423 <= add_ln840_5_fu_924_p2;
                trunc_ln840_8_reg_1418 <= trunc_ln840_8_fu_920_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln840_reg_1388 <= add_ln840_fu_867_p2;
                gmem_addr_3_read_reg_1383 <= m_axi_gmem_RDATA;
                trunc_ln840_6_reg_1378 <= trunc_ln840_6_fu_863_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_10_reg_1213 <= add_ln186_8_fu_616_p2;
                gmem_addr_12_reg_1219 <= add_ln186_10_fu_628_p2;
                gmem_addr_14_reg_1225 <= add_ln186_12_fu_640_p2;
                gmem_addr_16_reg_1231 <= add_ln186_14_fu_651_p2;
                gmem_addr_18_reg_1237 <= add_ln186_16_fu_663_p2;
                gmem_addr_2_reg_1189 <= add_ln186_fu_570_p2;
                gmem_addr_4_reg_1195 <= add_ln186_2_fu_581_p2;
                gmem_addr_6_reg_1201 <= add_ln186_4_fu_593_p2;
                gmem_addr_8_reg_1207 <= add_ln186_6_fu_605_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_11_read_reg_1303 <= m_axi_gmem_RDATA;
                mul_ln1494_2_reg_1293 <= mul_ln1494_2_fu_718_p2;
                trunc_ln840_2_reg_1298 <= trunc_ln840_2_fu_724_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem_addr_11_reg_1133 <= add_ln186_5;
                gmem_addr_13_reg_1139 <= add_ln186_3;
                gmem_addr_15_reg_1145 <= add_ln186_1;
                gmem_addr_17_reg_1151 <= weights;
                gmem_addr_1_reg_1103 <= add_ln186_15;
                gmem_addr_3_reg_1109 <= add_ln186_13;
                gmem_addr_5_reg_1115 <= add_ln186_11;
                gmem_addr_7_read_reg_1348 <= m_axi_gmem_RDATA;
                gmem_addr_7_reg_1121 <= add_ln186_9;
                gmem_addr_9_reg_1127 <= add_ln186_7;
                icmp_ln1027_reg_1157 <= icmp_ln1027_fu_521_p2;
                mul_ln1494_4_reg_1338 <= mul_ln1494_4_fu_808_p2;
                trunc_ln840_4_reg_1343 <= trunc_ln840_4_fu_814_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gmem_addr_12_read_reg_1353 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_13_read_reg_1283 <= m_axi_gmem_RDATA;
                mul_ln1494_1_reg_1273 <= mul_ln1494_1_fu_702_p2;
                trunc_ln840_1_reg_1278 <= trunc_ln840_1_fu_708_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                gmem_addr_14_read_reg_1373 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                gmem_addr_16_read_reg_1393 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_17_read_reg_1243 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then
                gmem_addr_18_read_reg_1413 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_2_read_reg_1248 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_4_read_reg_1268 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_6_read_reg_1288 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then
                gmem_addr_8_read_reg_1308 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage12_subdone, ap_condition_exit_pp0_iter0_stage12, ap_block_pp0_stage17_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage12)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    acc_sat_fu_1037_p3 <= 
        select_ln1035_fu_1023_p3 when (or_ln1035_fu_1031_p2(0) = '1') else 
        add_ln186_17_fu_1018_p2;
    add_ln1027_fu_527_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv5_1));
    add_ln13_1_fu_757_p2 <= std_logic_vector(unsigned(indvars_iv34_load_reg_1166) + unsigned(ap_const_lv5_6));
    add_ln13_fu_548_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvars_iv_load) + unsigned(ap_const_lv5_6));
    add_ln14_fu_782_p2 <= std_logic_vector(unsigned(indvars_iv17_mid2_reg_1183) + unsigned(ap_const_lv5_1));
    add_ln186_10_fu_628_p2 <= std_logic_vector(unsigned(add_ln186_6_fu_605_p2) + unsigned(ap_const_lv64_2));
    add_ln186_12_fu_640_p2 <= std_logic_vector(unsigned(add_ln186_19) + unsigned(indvars_iv17_cast_fu_567_p1));
    add_ln186_14_fu_651_p2 <= std_logic_vector(unsigned(add_ln186_12_fu_640_p2) + unsigned(ap_const_lv64_1));
    add_ln186_16_fu_663_p2 <= std_logic_vector(unsigned(add_ln186_12_fu_640_p2) + unsigned(ap_const_lv64_2));
    add_ln186_17_fu_1018_p2 <= std_logic_vector(unsigned(add_ln186_27_reg_1438) + unsigned(add_ln186_23_fu_1014_p2));
    add_ln186_20_fu_691_p2 <= std_logic_vector(unsigned(trunc_ln840_fu_687_p1) + unsigned(trunc_ln));
    add_ln186_21_fu_773_p2 <= std_logic_vector(unsigned(trunc_ln840_2_reg_1298) + unsigned(trunc_ln840_3_reg_1313));
    add_ln186_22_fu_777_p2 <= std_logic_vector(unsigned(add_ln186_21_fu_773_p2) + unsigned(trunc_ln840_1_reg_1278));
    add_ln186_23_fu_1014_p2 <= std_logic_vector(unsigned(add_ln186_22_reg_1333) + unsigned(add_ln186_20_reg_1263_pp0_iter1_reg));
    add_ln186_24_fu_964_p2 <= std_logic_vector(unsigned(trunc_ln840_4_reg_1343) + unsigned(trunc_ln840_5_reg_1358));
    add_ln186_25_fu_955_p2 <= std_logic_vector(unsigned(trunc_ln840_7_reg_1398) + unsigned(trunc_ln840_8_reg_1418));
    add_ln186_26_fu_959_p2 <= std_logic_vector(unsigned(add_ln186_25_fu_955_p2) + unsigned(trunc_ln840_6_reg_1378));
    add_ln186_27_fu_968_p2 <= std_logic_vector(unsigned(add_ln186_26_reg_1433) + unsigned(add_ln186_24_fu_964_p2));
    add_ln186_2_fu_581_p2 <= std_logic_vector(unsigned(add_ln186_fu_570_p2) + unsigned(ap_const_lv64_1));
    add_ln186_4_fu_593_p2 <= std_logic_vector(unsigned(add_ln186_fu_570_p2) + unsigned(ap_const_lv64_2));
    add_ln186_6_fu_605_p2 <= std_logic_vector(unsigned(add_ln186_18) + unsigned(indvars_iv17_cast_fu_567_p1));
    add_ln186_8_fu_616_p2 <= std_logic_vector(unsigned(add_ln186_6_fu_605_p2) + unsigned(ap_const_lv64_1));
    add_ln186_fu_570_p2 <= std_logic_vector(unsigned(indvars_iv17_cast_fu_567_p1) + unsigned(image_in));
    add_ln840_1_fu_841_p2 <= std_logic_vector(signed(sext_ln840_5_fu_833_p1) + signed(sext_ln840_4_fu_818_p1));
    add_ln840_2_fu_895_p2 <= std_logic_vector(signed(sext_ln840_9_fu_892_p1) + signed(sext_ln840_7_fu_884_p1));
    add_ln840_3_fu_976_p2 <= std_logic_vector(signed(sext_ln840_10_fu_973_p1) + signed(add_ln840_reg_1388));
    add_ln840_4_fu_751_p2 <= std_logic_vector(signed(sext_ln840_3_fu_743_p1) + signed(sext_ln840_fu_728_p1));
    add_ln840_5_fu_924_p2 <= std_logic_vector(signed(sext_ln840_1_fu_901_p1) + signed(sext_ln840_8_fu_916_p1));
    add_ln840_6_fu_939_p2 <= std_logic_vector(signed(sext_ln840_12_fu_936_p1) + signed(sext_ln840_2_fu_930_p1));
    add_ln840_7_fu_949_p2 <= std_logic_vector(signed(sext_ln840_13_fu_945_p1) + signed(sext_ln840_11_fu_933_p1));
    add_ln840_8_fu_984_p2 <= std_logic_vector(signed(sext_ln840_14_fu_981_p1) + signed(add_ln840_3_fu_976_p2));
    add_ln840_fu_867_p2 <= std_logic_vector(unsigned(acc_V) + unsigned(sext_ln840_6_fu_859_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem_RVALID = ap_const_logic_0) or (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((m_axi_gmem_RVALID = ap_const_logic_0) or (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state11_io)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state11_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state12_io)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state12_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_01001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_pp0_stage12_01001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_WREADY, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_11001 <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)))));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_WREADY, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state13_io)
    begin
                ap_block_pp0_stage12_subdone <= (((m_axi_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)))));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state14_io)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state14_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state15_io)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state15_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state16_io)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state16_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state17_io)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state17_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state18_io)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state18_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state2_io)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state4_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state4_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state5_io)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state6_io)
    begin
                ap_block_pp0_stage5_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state6_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state7_io)
    begin
                ap_block_pp0_stage6_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state7_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, m_axi_gmem_RVALID, ap_block_state8_io)
    begin
                ap_block_pp0_stage7_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state8_io)) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state9_io)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state9_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_block_state10_io)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state10_io) or ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))));
    end process;


    ap_block_state10_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state10_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state11_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state11_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state12_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state12_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state13_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state13_pp0_stage12_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state14_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state14_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state15_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state15_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state15_pp0_stage14_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state16_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state16_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state16_pp0_stage15_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state17_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state17_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state17_pp0_stage16_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state18_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state18_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp0_stage17_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state18_pp0_stage17_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state19_pp0_stage0_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state19_pp0_stage0_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage1_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state20_pp0_stage1_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state21_pp0_stage2_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state21_pp0_stage2_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state22_pp0_stage3_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state22_pp0_stage3_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state23_pp0_stage4_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state23_pp0_stage4_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state24_pp0_stage5_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state24_pp0_stage5_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state25_pp0_stage6_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state25_pp0_stage6_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state26_pp0_stage7_iter1_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state26_pp0_stage7_iter1 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;

        ap_block_state27_pp0_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state2_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state3_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;

        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state4_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state5_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;

        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state6_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;

        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state7_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state8_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln1027_reg_1157)
    begin
                ap_block_state9_io <= ((m_axi_gmem_ARREADY = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(m_axi_gmem_RVALID, icmp_ln1027_reg_1157)
    begin
                ap_block_state9_pp0_stage8_iter0 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (icmp_ln1027_reg_1157 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage12_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, icmp_ln1027_reg_1157, ap_block_pp0_stage12_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_subdone) and (icmp_ln1027_reg_1157 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage12 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage12_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage12;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_120)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_120;
        end if; 
    end process;


    ap_sig_allocacmp_indvars_iv17_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvars_iv17_fu_108, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvars_iv17_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvars_iv17_load <= indvars_iv17_fu_108;
        end if; 
    end process;


    ap_sig_allocacmp_indvars_iv34_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvars_iv34_fu_116)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvars_iv34_load <= ap_const_lv5_4;
        else 
            ap_sig_allocacmp_indvars_iv34_load <= indvars_iv34_fu_116;
        end if; 
    end process;


    ap_sig_allocacmp_indvars_iv_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvars_iv_fu_112)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvars_iv_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvars_iv_load <= indvars_iv_fu_112;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, m_axi_gmem_ARREADY, icmp_ln1027_reg_1157, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage12, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, m_axi_gmem_RVALID, icmp_ln1027_reg_1157, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage12, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, m_axi_gmem_WREADY, ap_block_pp0_stage12)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln1027_1_fu_542_p2 <= "1" when (ap_sig_allocacmp_indvars_iv17_load = ap_sig_allocacmp_indvars_iv34_load) else "0";
    icmp_ln1027_fu_521_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv5_10) else "0";
    icmp_ln1035_fu_1000_p2 <= "1" when (signed(tmp_fu_990_p4) > signed(ap_const_lv13_0)) else "0";
    indvars_iv17_cast_fu_567_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvars_iv17_mid2_reg_1183),64));
    indvars_iv17_mid2_fu_554_p3 <= 
        add_ln13_fu_548_p2 when (icmp_ln1027_1_fu_542_p2(0) = '1') else 
        ap_sig_allocacmp_indvars_iv17_load;

    m_axi_gmem_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, icmp_ln1027_reg_1157, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0_11001, gmem_addr_1_reg_1103, gmem_addr_3_reg_1109, gmem_addr_5_reg_1115, gmem_addr_7_reg_1121, gmem_addr_9_reg_1127, gmem_addr_11_reg_1133, gmem_addr_13_reg_1139, gmem_addr_15_reg_1145, gmem_addr_17_reg_1151, gmem_addr_2_reg_1189, ap_block_pp0_stage1_11001, gmem_addr_4_reg_1195, gmem_addr_6_reg_1201, gmem_addr_8_reg_1207, gmem_addr_10_reg_1213, gmem_addr_12_reg_1219, gmem_addr_14_reg_1225, gmem_addr_16_reg_1231, gmem_addr_18_reg_1237, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axi_gmem_ARADDR <= gmem_addr_18_reg_1237;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_1_reg_1103;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_16_reg_1231;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_3_reg_1109;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_14_reg_1225;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_5_reg_1115;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_12_reg_1219;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_7_reg_1121;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_10_reg_1213;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_9_reg_1127;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_8_reg_1207;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_11_reg_1133;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_6_reg_1201;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_13_reg_1139;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_4_reg_1195;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_15_reg_1145;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_2_reg_1189;
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0))) then 
            m_axi_gmem_ARADDR <= gmem_addr_17_reg_1151;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, icmp_ln1027_reg_1157, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, icmp_ln1027_reg_1157, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (icmp_ln1027_reg_1157 = ap_const_lv1_0)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= acc_sat_reg_1443;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv1_1;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln1494_1_fu_702_p0 <= mul_ln1494_1_fu_702_p00(8 - 1 downto 0);
    mul_ln1494_1_fu_702_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_4_read_reg_1268),16));
    mul_ln1494_2_fu_718_p0 <= mul_ln1494_2_fu_718_p00(8 - 1 downto 0);
    mul_ln1494_2_fu_718_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_6_read_reg_1288),16));
    mul_ln1494_3_fu_737_p0 <= mul_ln1494_3_fu_737_p00(8 - 1 downto 0);
    mul_ln1494_3_fu_737_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_8_read_reg_1308),16));
    mul_ln1494_4_fu_808_p0 <= mul_ln1494_4_fu_808_p00(8 - 1 downto 0);
    mul_ln1494_4_fu_808_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_10_read_reg_1328),16));
    mul_ln1494_5_fu_827_p0 <= mul_ln1494_5_fu_827_p00(8 - 1 downto 0);
    mul_ln1494_5_fu_827_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_12_read_reg_1353),16));
    mul_ln1494_6_fu_853_p0 <= mul_ln1494_6_fu_853_p00(8 - 1 downto 0);
    mul_ln1494_6_fu_853_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_14_read_reg_1373),16));
    mul_ln1494_7_fu_878_p0 <= mul_ln1494_7_fu_878_p00(8 - 1 downto 0);
    mul_ln1494_7_fu_878_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_16_read_reg_1393),16));
    mul_ln1494_8_fu_910_p0 <= mul_ln1494_8_fu_910_p00(8 - 1 downto 0);
    mul_ln1494_8_fu_910_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_18_read_reg_1413),16));
    mul_ln1494_fu_681_p0 <= mul_ln1494_fu_681_p00(8 - 1 downto 0);
    mul_ln1494_fu_681_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem_addr_2_read_reg_1248),16));
    or_ln1035_fu_1031_p2 <= (tmp_1_fu_1006_p3 or icmp_ln1035_fu_1000_p2);
    select_ln1027_1_fu_768_p3 <= 
        add_ln13_reg_1178 when (icmp_ln1027_1_reg_1172(0) = '1') else 
        indvars_iv_load_reg_1161;
    select_ln1027_fu_762_p3 <= 
        add_ln13_1_fu_757_p2 when (icmp_ln1027_1_reg_1172(0) = '1') else 
        indvars_iv34_load_reg_1166;
    select_ln1035_fu_1023_p3 <= 
        ap_const_lv8_FF when (icmp_ln1035_fu_1000_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln840_10_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln840_2_reg_1408),21));

        sext_ln840_11_fu_933_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln840_4_reg_1323),19));

        sext_ln840_12_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln840_5_reg_1423),18));

        sext_ln840_13_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln840_6_fu_939_p2),19));

        sext_ln840_14_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln840_7_reg_1428),21));

        sext_ln840_1_fu_901_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_1_reg_1273),17));

        sext_ln840_2_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_2_reg_1293),18));

        sext_ln840_3_fu_743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_3_fu_737_p2),17));

        sext_ln840_4_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_4_reg_1338),17));

        sext_ln840_5_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_5_fu_827_p2),17));

        sext_ln840_6_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_6_fu_853_p2),21));

        sext_ln840_7_fu_884_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_7_fu_878_p2),18));

        sext_ln840_8_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_8_fu_910_p2),17));

        sext_ln840_9_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln840_1_reg_1368),18));

        sext_ln840_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1494_reg_1253),17));

    tmp_1_fu_1006_p3 <= add_ln840_8_fu_984_p2(20 downto 20);
    tmp_fu_990_p4 <= add_ln840_8_fu_984_p2(20 downto 8);
    trunc_ln840_1_fu_708_p1 <= mul_ln1494_1_fu_702_p2(8 - 1 downto 0);
    trunc_ln840_2_fu_724_p1 <= mul_ln1494_2_fu_718_p2(8 - 1 downto 0);
    trunc_ln840_3_fu_747_p1 <= mul_ln1494_3_fu_737_p2(8 - 1 downto 0);
    trunc_ln840_4_fu_814_p1 <= mul_ln1494_4_fu_808_p2(8 - 1 downto 0);
    trunc_ln840_5_fu_837_p1 <= mul_ln1494_5_fu_827_p2(8 - 1 downto 0);
    trunc_ln840_6_fu_863_p1 <= mul_ln1494_6_fu_853_p2(8 - 1 downto 0);
    trunc_ln840_7_fu_888_p1 <= mul_ln1494_7_fu_878_p2(8 - 1 downto 0);
    trunc_ln840_8_fu_920_p1 <= mul_ln1494_8_fu_910_p2(8 - 1 downto 0);
    trunc_ln840_fu_687_p1 <= mul_ln1494_fu_681_p2(8 - 1 downto 0);
end behav;
