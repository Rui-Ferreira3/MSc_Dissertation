// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module axi4_conv2D_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_in_address0,
        image_in_ce0,
        image_in_q0,
        image_in_address1,
        image_in_ce1,
        image_in_q1,
        sext_ln186,
        sext_ln186_1,
        sext_ln186_2,
        sext_ln186_3,
        sext_ln186_4,
        sext_ln186_5,
        sext_ln186_6,
        sext_ln186_7,
        sext_ln186_8,
        acc_V,
        trunc_ln,
        image_out_address0,
        image_out_ce0,
        image_out_we0,
        image_out_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] image_in_address0;
output   image_in_ce0;
input  [7:0] image_in_q0;
output  [5:0] image_in_address1;
output   image_in_ce1;
input  [7:0] image_in_q1;
input  [7:0] sext_ln186;
input  [7:0] sext_ln186_1;
input  [7:0] sext_ln186_2;
input  [7:0] sext_ln186_3;
input  [7:0] sext_ln186_4;
input  [7:0] sext_ln186_5;
input  [7:0] sext_ln186_6;
input  [7:0] sext_ln186_7;
input  [7:0] sext_ln186_8;
input  [20:0] acc_V;
input  [7:0] trunc_ln;
output  [3:0] image_out_address0;
output   image_out_ce0;
output   image_out_we0;
output  [7:0] image_out_d0;

reg ap_idle;
reg[5:0] image_in_address0;
reg image_in_ce0;
reg[5:0] image_in_address1;
reg image_in_ce1;
reg image_out_ce0;
reg image_out_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln9_reg_991;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire  signed [15:0] sext_ln186_8_cast_fu_286_p1;
reg  signed [15:0] sext_ln186_8_cast_reg_946;
wire  signed [15:0] sext_ln186_7_cast_fu_290_p1;
reg  signed [15:0] sext_ln186_7_cast_reg_951;
wire  signed [15:0] sext_ln186_6_cast_fu_294_p1;
reg  signed [15:0] sext_ln186_6_cast_reg_956;
wire  signed [15:0] sext_ln186_5_cast_fu_298_p1;
reg  signed [15:0] sext_ln186_5_cast_reg_961;
wire  signed [15:0] sext_ln186_4_cast_fu_302_p1;
reg  signed [15:0] sext_ln186_4_cast_reg_966;
wire  signed [15:0] sext_ln186_3_cast_fu_306_p1;
reg  signed [15:0] sext_ln186_3_cast_reg_971;
wire  signed [15:0] sext_ln186_2_cast_fu_310_p1;
reg  signed [15:0] sext_ln186_2_cast_reg_976;
wire  signed [15:0] sext_ln186_1_cast_fu_314_p1;
reg  signed [15:0] sext_ln186_1_cast_reg_981;
wire  signed [15:0] sext_ln186_cast_fu_318_p1;
reg  signed [15:0] sext_ln186_cast_reg_986;
wire   [0:0] icmp_ln9_fu_355_p2;
reg   [4:0] indvars_iv_load_reg_995;
reg   [4:0] indvars_iv34_load_reg_1000;
wire   [0:0] icmp_ln1027_fu_376_p2;
reg   [0:0] icmp_ln1027_reg_1006;
reg   [0:0] icmp_ln1027_reg_1006_pp0_iter1_reg;
wire   [4:0] add_ln9_1_fu_382_p2;
reg   [4:0] add_ln9_1_reg_1014;
wire   [4:0] select_ln9_fu_388_p3;
reg   [4:0] select_ln9_reg_1019;
reg   [7:0] image_in_load_reg_1038;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire  signed [15:0] mul_ln1494_1_fu_426_p2;
reg  signed [15:0] mul_ln1494_1_reg_1043;
wire   [7:0] trunc_ln840_1_fu_431_p1;
reg   [7:0] trunc_ln840_1_reg_1048;
wire  signed [15:0] mul_ln1494_2_fu_459_p2;
reg  signed [15:0] mul_ln1494_2_reg_1063;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [7:0] trunc_ln840_2_fu_464_p1;
reg   [7:0] trunc_ln840_2_reg_1068;
wire  signed [15:0] mul_ln1494_3_fu_472_p2;
reg  signed [15:0] mul_ln1494_3_reg_1073;
wire   [7:0] trunc_ln840_3_fu_477_p1;
reg   [7:0] trunc_ln840_3_reg_1078;
wire   [5:0] indvars_iv17_cast_fu_501_p1;
reg   [5:0] indvars_iv17_cast_reg_1093;
wire    ap_block_pp0_stage3_11001;
wire  signed [15:0] mul_ln1494_4_fu_508_p2;
reg  signed [15:0] mul_ln1494_4_reg_1098;
wire   [7:0] trunc_ln840_4_fu_513_p1;
reg   [7:0] trunc_ln840_4_reg_1103;
wire  signed [15:0] mul_ln1494_5_fu_521_p2;
reg  signed [15:0] mul_ln1494_5_reg_1108;
wire   [7:0] trunc_ln840_5_fu_526_p1;
reg   [7:0] trunc_ln840_5_reg_1113;
wire   [7:0] add_ln186_3_fu_556_p2;
reg   [7:0] add_ln186_3_reg_1128;
wire  signed [15:0] mul_ln1494_6_fu_587_p2;
reg  signed [15:0] mul_ln1494_6_reg_1133;
wire    ap_block_pp0_stage4_11001;
wire   [7:0] trunc_ln840_6_fu_592_p1;
reg   [7:0] trunc_ln840_6_reg_1138;
wire  signed [15:0] mul_ln1494_7_fu_600_p2;
reg  signed [15:0] mul_ln1494_7_reg_1143;
wire   [7:0] trunc_ln840_7_fu_605_p1;
reg   [7:0] trunc_ln840_7_reg_1148;
wire   [16:0] add_ln840_7_fu_619_p2;
reg   [16:0] add_ln840_7_reg_1158;
wire  signed [15:0] mul_ln1494_8_fu_645_p2;
reg  signed [15:0] mul_ln1494_8_reg_1163;
wire   [7:0] trunc_ln840_8_fu_650_p1;
reg   [7:0] trunc_ln840_8_reg_1168;
wire   [20:0] add_ln840_6_fu_654_p2;
reg   [20:0] add_ln840_6_reg_1173;
wire   [17:0] add_ln840_8_fu_662_p2;
reg   [17:0] add_ln840_8_reg_1178;
wire   [16:0] add_ln840_10_fu_696_p2;
reg   [16:0] add_ln840_10_reg_1183;
wire   [17:0] add_ln840_12_fu_712_p2;
reg   [17:0] add_ln840_12_reg_1188;
wire   [7:0] add_ln186_1_fu_718_p2;
reg   [7:0] add_ln186_1_reg_1193;
wire   [7:0] add_ln186_7_fu_727_p2;
reg   [7:0] add_ln186_7_reg_1198;
wire   [20:0] add_ln840_14_fu_756_p2;
reg   [20:0] add_ln840_14_reg_1203;
reg   [12:0] tmp_reg_1208;
wire   [7:0] add_ln186_8_fu_776_p2;
reg   [7:0] add_ln186_8_reg_1213;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] indvars_iv17_cast23_fu_396_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln186_9_fu_407_p1;
wire   [63:0] zext_ln186_10_fu_440_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln186_11_fu_450_p1;
wire   [63:0] zext_ln186_12_fu_486_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln186_13_fu_496_p1;
wire   [63:0] zext_ln186_14_fu_536_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln186_15_fu_547_p1;
wire   [63:0] zext_ln186_16_fu_614_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln541_fu_873_p1;
reg   [2:0] rhs_fu_102;
wire   [2:0] j_V_fu_878_p2;
wire    ap_loop_init;
reg   [4:0] indvars_iv17_fu_106;
wire   [4:0] add_ln840_fu_401_p2;
reg   [4:0] ap_sig_allocacmp_indvars_iv17_load;
reg   [2:0] i_V_fu_110;
wire   [2:0] select_ln9_2_fu_800_p3;
reg   [4:0] indvars_iv_fu_114;
wire   [4:0] select_ln9_4_fu_572_p3;
reg   [4:0] ap_sig_allocacmp_indvars_iv_load;
reg   [4:0] indvars_iv34_fu_118;
wire   [4:0] select_ln9_3_fu_566_p3;
reg   [4:0] ap_sig_allocacmp_indvars_iv34_load;
reg   [4:0] indvar_flatten_fu_122;
wire   [4:0] add_ln9_fu_361_p2;
reg   [4:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [7:0] mul_ln1494_1_fu_426_p0;
wire  signed [7:0] mul_ln1494_1_fu_426_p1;
wire   [4:0] add_ln840_1_fu_435_p2;
wire   [4:0] add_ln14_fu_445_p2;
wire   [7:0] mul_ln1494_2_fu_459_p0;
wire  signed [7:0] mul_ln1494_2_fu_459_p1;
wire   [7:0] mul_ln1494_3_fu_472_p0;
wire  signed [7:0] mul_ln1494_3_fu_472_p1;
wire   [4:0] add_ln840_2_fu_481_p2;
wire   [4:0] add_ln840_3_fu_491_p2;
wire   [7:0] mul_ln1494_4_fu_508_p0;
wire  signed [7:0] mul_ln1494_4_fu_508_p1;
wire   [7:0] mul_ln1494_5_fu_521_p0;
wire  signed [7:0] mul_ln1494_5_fu_521_p1;
wire   [5:0] add_ln14_1_fu_530_p2;
wire   [5:0] add_ln840_4_fu_541_p2;
wire   [7:0] add_ln186_2_fu_552_p2;
wire   [4:0] add_ln9_2_fu_561_p2;
wire   [7:0] mul_ln1494_6_fu_587_p0;
wire  signed [7:0] mul_ln1494_6_fu_587_p1;
wire   [7:0] mul_ln1494_7_fu_600_p0;
wire  signed [7:0] mul_ln1494_7_fu_600_p1;
wire   [5:0] add_ln840_5_fu_609_p2;
wire  signed [16:0] sext_ln840_5_fu_580_p1;
wire  signed [16:0] sext_ln840_4_fu_577_p1;
wire   [7:0] mul_ln1494_8_fu_645_p0;
wire  signed [7:0] mul_ln1494_8_fu_645_p1;
wire  signed [20:0] sext_ln840_6_fu_635_p1;
wire  signed [17:0] sext_ln840_9_fu_659_p1;
wire  signed [17:0] sext_ln840_7_fu_638_p1;
wire   [7:0] mul_ln1494_fu_671_p0;
wire  signed [7:0] mul_ln1494_fu_671_p1;
wire  signed [15:0] mul_ln1494_fu_671_p2;
wire  signed [16:0] sext_ln840_3_fu_690_p1;
wire  signed [16:0] sext_ln840_fu_676_p1;
wire  signed [16:0] sext_ln840_1_fu_684_p1;
wire  signed [16:0] sext_ln840_8_fu_693_p1;
wire   [16:0] add_ln840_11_fu_702_p2;
wire  signed [17:0] sext_ln840_12_fu_708_p1;
wire  signed [17:0] sext_ln840_2_fu_687_p1;
wire   [7:0] trunc_ln840_fu_680_p1;
wire   [7:0] add_ln186_6_fu_723_p2;
wire  signed [20:0] sext_ln840_10_fu_732_p1;
wire  signed [18:0] sext_ln840_13_fu_743_p1;
wire  signed [18:0] sext_ln840_11_fu_740_p1;
wire   [18:0] add_ln840_13_fu_746_p2;
wire  signed [20:0] sext_ln840_14_fu_752_p1;
wire   [20:0] add_ln840_9_fu_735_p2;
wire   [7:0] add_ln186_5_fu_772_p2;
wire   [2:0] add_ln840_15_fu_794_p2;
wire   [1:0] trunc_ln9_fu_807_p1;
wire   [7:0] add_ln186_4_fu_831_p2;
wire   [0:0] icmp_ln1035_fu_819_p2;
wire   [0:0] tmp_1_fu_824_p3;
wire   [0:0] or_ln1035_fu_848_p2;
wire   [7:0] select_ln1035_fu_840_p3;
wire   [7:0] add_ln186_fu_835_p2;
wire   [2:0] select_ln9_1_fu_787_p3;
wire   [3:0] lhs_mid2_fu_811_p3;
wire   [3:0] zext_ln1495_fu_863_p1;
wire   [3:0] ret_V_fu_867_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [15:0] mul_ln1494_1_fu_426_p00;
wire   [15:0] mul_ln1494_2_fu_459_p00;
wire   [15:0] mul_ln1494_3_fu_472_p00;
wire   [15:0] mul_ln1494_4_fu_508_p00;
wire   [15:0] mul_ln1494_5_fu_521_p00;
wire   [15:0] mul_ln1494_6_fu_587_p00;
wire   [15:0] mul_ln1494_7_fu_600_p00;
wire   [15:0] mul_ln1494_8_fu_645_p00;
wire   [15:0] mul_ln1494_fu_671_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U1(
    .din0(mul_ln1494_1_fu_426_p0),
    .din1(mul_ln1494_1_fu_426_p1),
    .dout(mul_ln1494_1_fu_426_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U2(
    .din0(mul_ln1494_2_fu_459_p0),
    .din1(mul_ln1494_2_fu_459_p1),
    .dout(mul_ln1494_2_fu_459_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U3(
    .din0(mul_ln1494_3_fu_472_p0),
    .din1(mul_ln1494_3_fu_472_p1),
    .dout(mul_ln1494_3_fu_472_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U4(
    .din0(mul_ln1494_4_fu_508_p0),
    .din1(mul_ln1494_4_fu_508_p1),
    .dout(mul_ln1494_4_fu_508_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U5(
    .din0(mul_ln1494_5_fu_521_p0),
    .din1(mul_ln1494_5_fu_521_p1),
    .dout(mul_ln1494_5_fu_521_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U6(
    .din0(mul_ln1494_6_fu_587_p0),
    .din1(mul_ln1494_6_fu_587_p1),
    .dout(mul_ln1494_6_fu_587_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U7(
    .din0(mul_ln1494_7_fu_600_p0),
    .din1(mul_ln1494_7_fu_600_p1),
    .dout(mul_ln1494_7_fu_600_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U8(
    .din0(mul_ln1494_8_fu_645_p0),
    .din1(mul_ln1494_8_fu_645_p1),
    .dout(mul_ln1494_8_fu_645_p2)
);

axi4_conv2D_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U9(
    .din0(mul_ln1494_fu_671_p0),
    .din1(mul_ln1494_fu_671_p1),
    .dout(mul_ln1494_fu_671_p2)
);

axi4_conv2D_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_V_fu_110 <= 3'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        i_V_fu_110 <= select_ln9_2_fu_800_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln9_fu_355_p2 == 1'd0))) begin
            indvar_flatten_fu_122 <= add_ln9_fu_361_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_122 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln9_fu_355_p2 == 1'd0))) begin
            indvars_iv17_fu_106 <= add_ln840_fu_401_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv17_fu_106 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvars_iv34_fu_118 <= 5'd4;
    end else if (((icmp_ln9_reg_991 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        indvars_iv34_fu_118 <= select_ln9_3_fu_566_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvars_iv_fu_114 <= 5'd0;
    end else if (((icmp_ln9_reg_991 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        indvars_iv_fu_114 <= select_ln9_4_fu_572_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rhs_fu_102 <= 3'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rhs_fu_102 <= j_V_fu_878_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln186_1_reg_1193 <= add_ln186_1_fu_718_p2;
        add_ln186_7_reg_1198 <= add_ln186_7_fu_727_p2;
        add_ln840_10_reg_1183 <= add_ln840_10_fu_696_p2;
        add_ln840_12_reg_1188 <= add_ln840_12_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_991 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln186_3_reg_1128 <= add_ln186_3_fu_556_p2;
        indvars_iv17_cast_reg_1093[4 : 0] <= indvars_iv17_cast_fu_501_p1[4 : 0];
        mul_ln1494_4_reg_1098 <= mul_ln1494_4_fu_508_p2;
        mul_ln1494_5_reg_1108 <= mul_ln1494_5_fu_521_p2;
        trunc_ln840_4_reg_1103 <= trunc_ln840_4_fu_513_p1;
        trunc_ln840_5_reg_1113 <= trunc_ln840_5_fu_526_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln186_8_reg_1213 <= add_ln186_8_fu_776_p2;
        add_ln840_14_reg_1203 <= add_ln840_14_fu_756_p2;
        tmp_reg_1208 <= {{add_ln840_14_fu_756_p2[20:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln840_6_reg_1173 <= add_ln840_6_fu_654_p2;
        add_ln840_8_reg_1178 <= add_ln840_8_fu_662_p2;
        icmp_ln1027_reg_1006_pp0_iter1_reg <= icmp_ln1027_reg_1006;
        icmp_ln9_reg_991 <= icmp_ln9_fu_355_p2;
        mul_ln1494_8_reg_1163 <= mul_ln1494_8_fu_645_p2;
        sext_ln186_1_cast_reg_981 <= sext_ln186_1_cast_fu_314_p1;
        sext_ln186_2_cast_reg_976 <= sext_ln186_2_cast_fu_310_p1;
        sext_ln186_3_cast_reg_971 <= sext_ln186_3_cast_fu_306_p1;
        sext_ln186_4_cast_reg_966 <= sext_ln186_4_cast_fu_302_p1;
        sext_ln186_5_cast_reg_961 <= sext_ln186_5_cast_fu_298_p1;
        sext_ln186_6_cast_reg_956 <= sext_ln186_6_cast_fu_294_p1;
        sext_ln186_7_cast_reg_951 <= sext_ln186_7_cast_fu_290_p1;
        sext_ln186_8_cast_reg_946 <= sext_ln186_8_cast_fu_286_p1;
        sext_ln186_cast_reg_986 <= sext_ln186_cast_fu_318_p1;
        trunc_ln840_8_reg_1168 <= trunc_ln840_8_fu_650_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_991 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln840_7_reg_1158 <= add_ln840_7_fu_619_p2;
        mul_ln1494_6_reg_1133 <= mul_ln1494_6_fu_587_p2;
        mul_ln1494_7_reg_1143 <= mul_ln1494_7_fu_600_p2;
        trunc_ln840_6_reg_1138 <= trunc_ln840_6_fu_592_p1;
        trunc_ln840_7_reg_1148 <= trunc_ln840_7_fu_605_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln9_fu_355_p2 == 1'd0))) begin
        add_ln9_1_reg_1014 <= add_ln9_1_fu_382_p2;
        icmp_ln1027_reg_1006 <= icmp_ln1027_fu_376_p2;
        indvars_iv34_load_reg_1000 <= ap_sig_allocacmp_indvars_iv34_load;
        indvars_iv_load_reg_995 <= ap_sig_allocacmp_indvars_iv_load;
        select_ln9_reg_1019 <= select_ln9_fu_388_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_991 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        image_in_load_reg_1038 <= image_in_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_991 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln1494_1_reg_1043 <= mul_ln1494_1_fu_426_p2;
        trunc_ln840_1_reg_1048 <= trunc_ln840_1_fu_431_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_reg_991 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln1494_2_reg_1063 <= mul_ln1494_2_fu_459_p2;
        mul_ln1494_3_reg_1073 <= mul_ln1494_3_fu_472_p2;
        trunc_ln840_2_reg_1068 <= trunc_ln840_2_fu_464_p1;
        trunc_ln840_3_reg_1078 <= trunc_ln840_3_fu_477_p1;
    end
end

always @ (*) begin
    if (((icmp_ln9_reg_991 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_122;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv17_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv17_load = indvars_iv17_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv34_load = 5'd4;
    end else begin
        ap_sig_allocacmp_indvars_iv34_load = indvars_iv34_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv_load = 5'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv_load = indvars_iv_fu_114;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            image_in_address0 = zext_ln186_16_fu_614_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            image_in_address0 = zext_ln186_15_fu_547_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            image_in_address0 = zext_ln186_13_fu_496_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            image_in_address0 = zext_ln186_11_fu_450_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            image_in_address0 = zext_ln186_9_fu_407_p1;
        end else begin
            image_in_address0 = 'bx;
        end
    end else begin
        image_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            image_in_address1 = zext_ln186_14_fu_536_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            image_in_address1 = zext_ln186_12_fu_486_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            image_in_address1 = zext_ln186_10_fu_440_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            image_in_address1 = indvars_iv17_cast23_fu_396_p1;
        end else begin
            image_in_address1 = 'bx;
        end
    end else begin
        image_in_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        image_in_ce0 = 1'b1;
    end else begin
        image_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        image_in_ce1 = 1'b1;
    end else begin
        image_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        image_out_ce0 = 1'b1;
    end else begin
        image_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        image_out_we0 = 1'b1;
    end else begin
        image_out_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln14_1_fu_530_p2 = (indvars_iv17_cast_fu_501_p1 + 6'd12);

assign add_ln14_fu_445_p2 = (select_ln9_reg_1019 + 5'd6);

assign add_ln186_1_fu_718_p2 = (trunc_ln840_fu_680_p1 + trunc_ln);

assign add_ln186_2_fu_552_p2 = (trunc_ln840_2_reg_1068 + trunc_ln840_3_reg_1078);

assign add_ln186_3_fu_556_p2 = (add_ln186_2_fu_552_p2 + trunc_ln840_1_reg_1048);

assign add_ln186_4_fu_831_p2 = (add_ln186_3_reg_1128 + add_ln186_1_reg_1193);

assign add_ln186_5_fu_772_p2 = (trunc_ln840_4_reg_1103 + trunc_ln840_5_reg_1113);

assign add_ln186_6_fu_723_p2 = (trunc_ln840_7_reg_1148 + trunc_ln840_8_reg_1168);

assign add_ln186_7_fu_727_p2 = (add_ln186_6_fu_723_p2 + trunc_ln840_6_reg_1138);

assign add_ln186_8_fu_776_p2 = (add_ln186_7_reg_1198 + add_ln186_5_fu_772_p2);

assign add_ln186_fu_835_p2 = (add_ln186_8_reg_1213 + add_ln186_4_fu_831_p2);

assign add_ln840_10_fu_696_p2 = ($signed(sext_ln840_3_fu_690_p1) + $signed(sext_ln840_fu_676_p1));

assign add_ln840_11_fu_702_p2 = ($signed(sext_ln840_1_fu_684_p1) + $signed(sext_ln840_8_fu_693_p1));

assign add_ln840_12_fu_712_p2 = ($signed(sext_ln840_12_fu_708_p1) + $signed(sext_ln840_2_fu_687_p1));

assign add_ln840_13_fu_746_p2 = ($signed(sext_ln840_13_fu_743_p1) + $signed(sext_ln840_11_fu_740_p1));

assign add_ln840_14_fu_756_p2 = ($signed(sext_ln840_14_fu_752_p1) + $signed(add_ln840_9_fu_735_p2));

assign add_ln840_15_fu_794_p2 = (i_V_fu_110 + 3'd1);

assign add_ln840_1_fu_435_p2 = (select_ln9_reg_1019 + 5'd2);

assign add_ln840_2_fu_481_p2 = (select_ln9_reg_1019 + 5'd7);

assign add_ln840_3_fu_491_p2 = (select_ln9_reg_1019 + 5'd8);

assign add_ln840_4_fu_541_p2 = (indvars_iv17_cast_fu_501_p1 + 6'd13);

assign add_ln840_5_fu_609_p2 = (indvars_iv17_cast_reg_1093 + 6'd14);

assign add_ln840_6_fu_654_p2 = ($signed(acc_V) + $signed(sext_ln840_6_fu_635_p1));

assign add_ln840_7_fu_619_p2 = ($signed(sext_ln840_5_fu_580_p1) + $signed(sext_ln840_4_fu_577_p1));

assign add_ln840_8_fu_662_p2 = ($signed(sext_ln840_9_fu_659_p1) + $signed(sext_ln840_7_fu_638_p1));

assign add_ln840_9_fu_735_p2 = ($signed(sext_ln840_10_fu_732_p1) + $signed(add_ln840_6_reg_1173));

assign add_ln840_fu_401_p2 = (select_ln9_fu_388_p3 + 5'd1);

assign add_ln9_1_fu_382_p2 = (ap_sig_allocacmp_indvars_iv_load + 5'd6);

assign add_ln9_2_fu_561_p2 = (indvars_iv34_load_reg_1000 + 5'd6);

assign add_ln9_fu_361_p2 = (ap_sig_allocacmp_indvar_flatten_load + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign icmp_ln1027_fu_376_p2 = ((ap_sig_allocacmp_indvars_iv17_load == ap_sig_allocacmp_indvars_iv34_load) ? 1'b1 : 1'b0);

assign icmp_ln1035_fu_819_p2 = (($signed(tmp_reg_1208) > $signed(13'd0)) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_355_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 5'd16) ? 1'b1 : 1'b0);

assign image_out_address0 = zext_ln541_fu_873_p1;

assign image_out_d0 = ((or_ln1035_fu_848_p2[0:0] == 1'b1) ? select_ln1035_fu_840_p3 : add_ln186_fu_835_p2);

assign indvars_iv17_cast23_fu_396_p1 = select_ln9_fu_388_p3;

assign indvars_iv17_cast_fu_501_p1 = select_ln9_reg_1019;

assign j_V_fu_878_p2 = (select_ln9_1_fu_787_p3 + 3'd1);

assign lhs_mid2_fu_811_p3 = {{trunc_ln9_fu_807_p1}, {2'd0}};

assign mul_ln1494_1_fu_426_p0 = mul_ln1494_1_fu_426_p00;

assign mul_ln1494_1_fu_426_p00 = image_in_q0;

assign mul_ln1494_1_fu_426_p1 = sext_ln186_1_cast_reg_981;

assign mul_ln1494_2_fu_459_p0 = mul_ln1494_2_fu_459_p00;

assign mul_ln1494_2_fu_459_p00 = image_in_q1;

assign mul_ln1494_2_fu_459_p1 = sext_ln186_2_cast_reg_976;

assign mul_ln1494_3_fu_472_p0 = mul_ln1494_3_fu_472_p00;

assign mul_ln1494_3_fu_472_p00 = image_in_q0;

assign mul_ln1494_3_fu_472_p1 = sext_ln186_3_cast_reg_971;

assign mul_ln1494_4_fu_508_p0 = mul_ln1494_4_fu_508_p00;

assign mul_ln1494_4_fu_508_p00 = image_in_q1;

assign mul_ln1494_4_fu_508_p1 = sext_ln186_4_cast_reg_966;

assign mul_ln1494_5_fu_521_p0 = mul_ln1494_5_fu_521_p00;

assign mul_ln1494_5_fu_521_p00 = image_in_q0;

assign mul_ln1494_5_fu_521_p1 = sext_ln186_5_cast_reg_961;

assign mul_ln1494_6_fu_587_p0 = mul_ln1494_6_fu_587_p00;

assign mul_ln1494_6_fu_587_p00 = image_in_q1;

assign mul_ln1494_6_fu_587_p1 = sext_ln186_6_cast_reg_956;

assign mul_ln1494_7_fu_600_p0 = mul_ln1494_7_fu_600_p00;

assign mul_ln1494_7_fu_600_p00 = image_in_q0;

assign mul_ln1494_7_fu_600_p1 = sext_ln186_7_cast_reg_951;

assign mul_ln1494_8_fu_645_p0 = mul_ln1494_8_fu_645_p00;

assign mul_ln1494_8_fu_645_p00 = image_in_q0;

assign mul_ln1494_8_fu_645_p1 = sext_ln186_8_cast_reg_946;

assign mul_ln1494_fu_671_p0 = mul_ln1494_fu_671_p00;

assign mul_ln1494_fu_671_p00 = image_in_load_reg_1038;

assign mul_ln1494_fu_671_p1 = sext_ln186_cast_reg_986;

assign or_ln1035_fu_848_p2 = (tmp_1_fu_824_p3 | icmp_ln1035_fu_819_p2);

assign ret_V_fu_867_p2 = (lhs_mid2_fu_811_p3 + zext_ln1495_fu_863_p1);

assign select_ln1035_fu_840_p3 = ((icmp_ln1035_fu_819_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln9_1_fu_787_p3 = ((icmp_ln1027_reg_1006_pp0_iter1_reg[0:0] == 1'b1) ? 3'd0 : rhs_fu_102);

assign select_ln9_2_fu_800_p3 = ((icmp_ln1027_reg_1006_pp0_iter1_reg[0:0] == 1'b1) ? add_ln840_15_fu_794_p2 : i_V_fu_110);

assign select_ln9_3_fu_566_p3 = ((icmp_ln1027_reg_1006[0:0] == 1'b1) ? add_ln9_2_fu_561_p2 : indvars_iv34_load_reg_1000);

assign select_ln9_4_fu_572_p3 = ((icmp_ln1027_reg_1006[0:0] == 1'b1) ? add_ln9_1_reg_1014 : indvars_iv_load_reg_995);

assign select_ln9_fu_388_p3 = ((icmp_ln1027_fu_376_p2[0:0] == 1'b1) ? add_ln9_1_fu_382_p2 : ap_sig_allocacmp_indvars_iv17_load);

assign sext_ln186_1_cast_fu_314_p1 = $signed(sext_ln186_1);

assign sext_ln186_2_cast_fu_310_p1 = $signed(sext_ln186_2);

assign sext_ln186_3_cast_fu_306_p1 = $signed(sext_ln186_3);

assign sext_ln186_4_cast_fu_302_p1 = $signed(sext_ln186_4);

assign sext_ln186_5_cast_fu_298_p1 = $signed(sext_ln186_5);

assign sext_ln186_6_cast_fu_294_p1 = $signed(sext_ln186_6);

assign sext_ln186_7_cast_fu_290_p1 = $signed(sext_ln186_7);

assign sext_ln186_8_cast_fu_286_p1 = $signed(sext_ln186_8);

assign sext_ln186_cast_fu_318_p1 = $signed(sext_ln186);

assign sext_ln840_10_fu_732_p1 = $signed(add_ln840_8_reg_1178);

assign sext_ln840_11_fu_740_p1 = $signed(add_ln840_10_reg_1183);

assign sext_ln840_12_fu_708_p1 = $signed(add_ln840_11_fu_702_p2);

assign sext_ln840_13_fu_743_p1 = $signed(add_ln840_12_reg_1188);

assign sext_ln840_14_fu_752_p1 = $signed(add_ln840_13_fu_746_p2);

assign sext_ln840_1_fu_684_p1 = mul_ln1494_1_reg_1043;

assign sext_ln840_2_fu_687_p1 = mul_ln1494_2_reg_1063;

assign sext_ln840_3_fu_690_p1 = mul_ln1494_3_reg_1073;

assign sext_ln840_4_fu_577_p1 = mul_ln1494_4_reg_1098;

assign sext_ln840_5_fu_580_p1 = mul_ln1494_5_reg_1108;

assign sext_ln840_6_fu_635_p1 = mul_ln1494_6_reg_1133;

assign sext_ln840_7_fu_638_p1 = mul_ln1494_7_reg_1143;

assign sext_ln840_8_fu_693_p1 = mul_ln1494_8_reg_1163;

assign sext_ln840_9_fu_659_p1 = $signed(add_ln840_7_reg_1158);

assign sext_ln840_fu_676_p1 = mul_ln1494_fu_671_p2;

assign tmp_1_fu_824_p3 = add_ln840_14_reg_1203[32'd20];

assign trunc_ln840_1_fu_431_p1 = mul_ln1494_1_fu_426_p2[7:0];

assign trunc_ln840_2_fu_464_p1 = mul_ln1494_2_fu_459_p2[7:0];

assign trunc_ln840_3_fu_477_p1 = mul_ln1494_3_fu_472_p2[7:0];

assign trunc_ln840_4_fu_513_p1 = mul_ln1494_4_fu_508_p2[7:0];

assign trunc_ln840_5_fu_526_p1 = mul_ln1494_5_fu_521_p2[7:0];

assign trunc_ln840_6_fu_592_p1 = mul_ln1494_6_fu_587_p2[7:0];

assign trunc_ln840_7_fu_605_p1 = mul_ln1494_7_fu_600_p2[7:0];

assign trunc_ln840_8_fu_650_p1 = mul_ln1494_8_fu_645_p2[7:0];

assign trunc_ln840_fu_680_p1 = mul_ln1494_fu_671_p2[7:0];

assign trunc_ln9_fu_807_p1 = select_ln9_2_fu_800_p3[1:0];

assign zext_ln1495_fu_863_p1 = select_ln9_1_fu_787_p3;

assign zext_ln186_10_fu_440_p1 = add_ln840_1_fu_435_p2;

assign zext_ln186_11_fu_450_p1 = add_ln14_fu_445_p2;

assign zext_ln186_12_fu_486_p1 = add_ln840_2_fu_481_p2;

assign zext_ln186_13_fu_496_p1 = add_ln840_3_fu_491_p2;

assign zext_ln186_14_fu_536_p1 = add_ln14_1_fu_530_p2;

assign zext_ln186_15_fu_547_p1 = add_ln840_4_fu_541_p2;

assign zext_ln186_16_fu_614_p1 = add_ln840_5_fu_609_p2;

assign zext_ln186_9_fu_407_p1 = add_ln840_fu_401_p2;

assign zext_ln541_fu_873_p1 = ret_V_fu_867_p2;

always @ (posedge ap_clk) begin
    indvars_iv17_cast_reg_1093[5] <= 1'b0;
end

endmodule //axi4_conv2D_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2
