// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi4_conv2D_axi4_conv2D,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.092000,HLS_SYN_LAT=91,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=672,HLS_SYN_LUT=1198,HLS_VERSION=2022_2}" *)

module axi4_conv2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_in_address0,
        image_in_ce0,
        image_in_q0,
        image_in_address1,
        image_in_ce1,
        image_in_q1,
        image_out_address0,
        image_out_ce0,
        image_out_we0,
        image_out_d0,
        weights_address0,
        weights_ce0,
        weights_q0,
        weights_address1,
        weights_ce1,
        weights_q1,
        bias
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] image_in_address0;
output   image_in_ce0;
input  [7:0] image_in_q0;
output  [5:0] image_in_address1;
output   image_in_ce1;
input  [7:0] image_in_q1;
output  [3:0] image_out_address0;
output   image_out_ce0;
output   image_out_we0;
output  [7:0] image_out_d0;
output  [3:0] weights_address0;
output   weights_ce0;
input  [7:0] weights_q0;
output  [3:0] weights_address1;
output   weights_ce1;
input  [7:0] weights_q1;
input  [31:0] bias;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] weights_address0;
reg weights_ce0;
reg[3:0] weights_address1;
reg weights_ce1;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] weights_load_reg_180;
wire    ap_CS_fsm_state2;
reg   [7:0] weights_load_1_reg_195;
wire    ap_CS_fsm_state3;
reg   [7:0] weights_load_2_reg_200;
reg   [7:0] weights_load_3_reg_215;
wire    ap_CS_fsm_state4;
reg   [7:0] weights_load_4_reg_220;
reg   [7:0] weights_load_5_reg_235;
wire    ap_CS_fsm_state5;
reg   [7:0] weights_load_6_reg_240;
wire   [20:0] empty_fu_165_p1;
reg   [20:0] empty_reg_255;
wire    ap_CS_fsm_state6;
wire   [7:0] trunc_ln840_fu_170_p1;
reg   [7:0] trunc_ln840_reg_260;
reg   [7:0] weights_load_7_reg_265;
reg   [7:0] weights_load_8_reg_270;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_done;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_idle;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_ready;
wire   [5:0] grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_address0;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_ce0;
wire   [5:0] grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_address1;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_ce1;
wire   [3:0] grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_address0;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_ce0;
wire    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_we0;
wire   [7:0] grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_d0;
reg    grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start_reg;
wire    ap_CS_fsm_state7;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start_reg = 1'b0;
end

axi4_conv2D_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2 grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start),
    .ap_done(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_done),
    .ap_idle(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_idle),
    .ap_ready(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_ready),
    .image_in_address0(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_address0),
    .image_in_ce0(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_ce0),
    .image_in_q0(image_in_q0),
    .image_in_address1(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_address1),
    .image_in_ce1(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_ce1),
    .image_in_q1(image_in_q1),
    .sext_ln186(weights_load_reg_180),
    .sext_ln186_1(weights_load_1_reg_195),
    .sext_ln186_2(weights_load_2_reg_200),
    .sext_ln186_3(weights_load_3_reg_215),
    .sext_ln186_4(weights_load_4_reg_220),
    .sext_ln186_5(weights_load_5_reg_235),
    .sext_ln186_6(weights_load_6_reg_240),
    .sext_ln186_7(weights_load_7_reg_265),
    .sext_ln186_8(weights_load_8_reg_270),
    .acc_V(empty_reg_255),
    .trunc_ln(trunc_ln840_reg_260),
    .image_out_address0(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_address0),
    .image_out_ce0(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_ce0),
    .image_out_we0(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_we0),
    .image_out_d0(grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start_reg <= 1'b1;
        end else if ((grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_ready == 1'b1)) begin
            grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        empty_reg_255 <= empty_fu_165_p1;
        trunc_ln840_reg_260 <= trunc_ln840_fu_170_p1;
        weights_load_7_reg_265 <= weights_q0;
        weights_load_8_reg_270 <= weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_load_1_reg_195 <= weights_q1;
        weights_load_2_reg_200 <= weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_load_3_reg_215 <= weights_q0;
        weights_load_4_reg_220 <= weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_load_5_reg_235 <= weights_q0;
        weights_load_6_reg_240 <= weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_load_reg_180 <= weights_q0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        weights_address0 = 64'd0;
    end else begin
        weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        weights_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        weights_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        weights_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        weights_address1 = 64'd1;
    end else begin
        weights_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        weights_ce0 = 1'b1;
    end else begin
        weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        weights_ce1 = 1'b1;
    end else begin
        weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign empty_fu_165_p1 = bias[20:0];

assign grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_ap_start_reg;

assign image_in_address0 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_address0;

assign image_in_address1 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_address1;

assign image_in_ce0 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_ce0;

assign image_in_ce1 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_in_ce1;

assign image_out_address0 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_address0;

assign image_out_ce0 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_ce0;

assign image_out_d0 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_d0;

assign image_out_we0 = grp_axi4_conv2D_Pipeline_VITIS_LOOP_9_1_VITIS_LOOP_10_2_fu_144_image_out_we0;

assign trunc_ln840_fu_170_p1 = bias[7:0];

endmodule //axi4_conv2D
